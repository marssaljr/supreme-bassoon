(undo-tree-save-format-version . 1)
"5e84dde1ee4164e8023a13d6acf5f41cba30ecc2"
[nil nil nil nil (25282 19307 479498 834000) 0 nil]
([nil nil ((1 . 2611) (#("from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
SECRET_KEY = 'django-insecure-9hdn*4mpx)wgq2si-3^^4#qzu!cbtc%szf$x609^v4c^!c1luf'
DEBUG = True

ALLOWED_HOSTS = [
    '192.168.1.2',
    'localhost',
    '127.0.0.1'
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
		'django_sass',
		'cart',
    'store',
		'user',
]
CART_SESSION_ID = 'cart'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'templates/static'),)
STATIC_ROOT = os.path.join('static')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
" 0 4 (fontified t face font-lock-keyword-face) 4 13 (fontified t) 13 19 (fontified t face font-lock-keyword-face) 19 25 (fontified t) 25 31 (fontified t face font-lock-keyword-face) 31 36 (fontified t) 36 38 (fontified t face font-lock-comment-delimiter-face) 38 101 (fontified t face font-lock-comment-face) 101 109 (fontified t face font-lock-variable-name-face) 109 116 (fontified t) 116 117 (fontified t face (rainbow-delimiters-depth-1-face)) 117 125 (fontified t) 125 126 (fontified t face (rainbow-delimiters-depth-1-face)) 126 134 (fontified t) 134 135 (fontified t face (rainbow-delimiters-depth-1-face)) 135 136 (fontified t face (rainbow-delimiters-depth-1-face)) 136 151 (fontified t) 151 161 (fontified t face font-lock-variable-name-face) 161 164 (fontified t) 164 232 (fontified t face font-lock-string-face) 232 233 (fontified t) 233 238 (fontified t face font-lock-variable-name-face) 238 241 (fontified t) 241 245 (fontified t face font-lock-constant-face) 245 247 (fontified t) 247 260 (fontified t face font-lock-variable-name-face) 260 263 (fontified t) 263 264 (fontified t face (rainbow-delimiters-depth-1-face)) 264 269 (fontified t) 269 282 (fontified t face font-lock-string-face) 282 288 (fontified t) 288 299 (fontified t face font-lock-string-face) 299 305 (fontified t) 305 316 (fontified t face font-lock-string-face) 316 317 (fontified t) 317 318 (fontified t face (rainbow-delimiters-depth-1-face)) 318 320 (fontified t) 320 334 (fontified t face font-lock-variable-name-face) 334 337 (fontified t) 337 338 (fontified t face (rainbow-delimiters-depth-1-face)) 338 343 (fontified t) 343 365 (fontified t face font-lock-string-face) 365 371 (fontified t) 371 392 (fontified t face font-lock-string-face) 392 398 (fontified t) 398 427 (fontified t face font-lock-string-face) 427 433 (fontified t) 433 458 (fontified t face font-lock-string-face) 458 464 (fontified t) 464 489 (fontified t face font-lock-string-face) 489 495 (fontified t) 495 523 (fontified t face font-lock-string-face) 523 527 (fontified t) 527 540 (fontified t face font-lock-string-face) 540 544 (fontified t) 544 550 (fontified t face font-lock-string-face) 550 556 (fontified t) 556 563 (fontified t face font-lock-string-face) 563 567 (fontified t) 567 573 (fontified t face font-lock-string-face) 573 575 (fontified t) 575 576 (fontified t face (rainbow-delimiters-depth-1-face)) 576 577 (fontified t) 577 592 (fontified t face font-lock-variable-name-face) 592 595 (fontified t) 595 601 (fontified t face font-lock-string-face) 601 603 (fontified t) 603 613 (fontified t face font-lock-variable-name-face) 613 616 (fontified t) 616 617 (fontified t face (rainbow-delimiters-depth-1-face)) 617 622 (fontified t) 622 669 (fontified t face font-lock-string-face) 669 675 (fontified t) 675 729 (fontified t face font-lock-string-face) 729 735 (fontified t) 735 778 (fontified t face font-lock-string-face) 778 784 (fontified t) 784 827 (fontified t face font-lock-string-face) 827 833 (fontified t) 833 890 (fontified t face font-lock-string-face) 890 896 (fontified t) 896 950 (fontified t face font-lock-string-face) 950 956 (fontified t) 956 1012 (fontified t face font-lock-string-face) 1012 1014 (fontified t) 1014 1015 (fontified t face (rainbow-delimiters-depth-1-face)) 1015 1017 (fontified t) 1017 1029 (fontified t face font-lock-variable-name-face) 1029 1032 (fontified t) 1032 1045 (fontified t face font-lock-string-face) 1045 1047 (fontified t) 1047 1056 (fontified t face font-lock-variable-name-face) 1056 1059 (fontified t) 1059 1060 (fontified t face (rainbow-delimiters-depth-1-face)) 1060 1065 (fontified t) 1065 1066 (fontified t face (rainbow-delimiters-depth-2-face)) 1066 1075 (fontified t) 1075 1084 (fontified t face font-lock-string-face) 1084 1086 (fontified t) 1086 1135 (fontified t face font-lock-string-face) 1135 1145 (fontified t) 1145 1151 (fontified t face font-lock-string-face) 1151 1153 (fontified t) 1153 1154 (fontified t face (rainbow-delimiters-depth-3-face)) 1154 1166 (fontified t) 1166 1167 (fontified t face (rainbow-delimiters-depth-4-face)) 1167 1177 (fontified t) 1177 1188 (fontified t face font-lock-string-face) 1188 1189 (fontified t face (rainbow-delimiters-depth-4-face)) 1189 1190 (fontified t face (rainbow-delimiters-depth-3-face)) 1190 1200 (fontified t) 1200 1210 (fontified t face font-lock-string-face) 1210 1212 (fontified t) 1212 1216 (fontified t face font-lock-constant-face) 1216 1226 (fontified t) 1226 1235 (fontified t face font-lock-string-face) 1235 1237 (fontified t) 1237 1238 (fontified t face (rainbow-delimiters-depth-3-face)) 1238 1251 (fontified t) 1251 1271 (fontified t face font-lock-string-face) 1271 1273 (fontified t) 1273 1274 (fontified t face (rainbow-delimiters-depth-4-face)) 1274 1291 (fontified t) 1291 1333 (fontified t face font-lock-string-face) 1333 1351 (fontified t) 1351 1395 (fontified t face font-lock-string-face) 1395 1413 (fontified t) 1413 1458 (fontified t face font-lock-string-face) 1458 1476 (fontified t) 1476 1500 (fontified t face font-lock-string-face) 1500 1529 (fontified t face font-lock-string-face) 1529 1531 (fontified t) 1531 2618 (fontified nil)) . 1) (undo-tree-id0 . -246) (undo-tree-id1 . -247) (undo-tree-id2 . -246) (undo-tree-id3 . -246) (undo-tree-id4 . 2371) (undo-tree-id5 . -246) (undo-tree-id6 . -246) (undo-tree-id7 . -246) (undo-tree-id8 . -230) (undo-tree-id9 . -232) (undo-tree-id10 . -525) (undo-tree-id11 . -541) (undo-tree-id12 . -525) (undo-tree-id13 . -541) (undo-tree-id14 . -527) (undo-tree-id15 . -541) (undo-tree-id16 . -542) (undo-tree-id17 . -551) (undo-tree-id18 . -552) (undo-tree-id19 . -564) (undo-tree-id20 . -565) (undo-tree-id21 . -574) (undo-tree-id22 . -565) (undo-tree-id23 . -574) (undo-tree-id24 . -618) (undo-tree-id25 . -670) (undo-tree-id26 . -1890) (undo-tree-id27 . -1902) (undo-tree-id28 . -1995) (undo-tree-id29 . -1997) (undo-tree-id30 . -2090) (undo-tree-id31 . -2093) (undo-tree-id32 . -2186) (undo-tree-id33 . -2190) (undo-tree-id34 . -246) (undo-tree-id35 . -246) (undo-tree-id36 . -246) (undo-tree-id37 . -246) (undo-tree-id38 . -246) (undo-tree-id39 . -246) (undo-tree-id40 . -246) (undo-tree-id41 . -246) (undo-tree-id42 . -246) (undo-tree-id43 . -246) (undo-tree-id44 . -246) (undo-tree-id45 . -246) (undo-tree-id46 . -246) (undo-tree-id47 . -246) (undo-tree-id48 . -246) (undo-tree-id49 . -246) (undo-tree-id50 . -246) (undo-tree-id51 . -246) (undo-tree-id52 . -246) (undo-tree-id53 . -246) (undo-tree-id54 . -246) (undo-tree-id55 . -246) (undo-tree-id56 . -246) (undo-tree-id57 . -246) (undo-tree-id58 . -246) (undo-tree-id59 . -246) (undo-tree-id60 . -246) (t 25272 54007 596332 750000)) nil (25282 19307 479471 744000) 0 nil])
([nil nil ((#("# Build paths inside the project like this: BASE_DIR / 'subdir'.
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 65 (fontified t face font-lock-comment-face)) . 37) (undo-tree-id61 . -65) (undo-tree-id62 . -25) (undo-tree-id63 . -25) (undo-tree-id64 . -25) (undo-tree-id65 . -25) (undo-tree-id66 . -25) (undo-tree-id67 . -25) (undo-tree-id68 . -25) (undo-tree-id69 . -25) (undo-tree-id70 . -25) (undo-tree-id71 . -25) (undo-tree-id72 . -25) (undo-tree-id73 . -25) (undo-tree-id74 . -25) (undo-tree-id75 . -25) (undo-tree-id76 . -25) (undo-tree-id77 . -25) (undo-tree-id78 . -25) (undo-tree-id79 . -25) (undo-tree-id80 . -25) (undo-tree-id81 . -25) (undo-tree-id82 . -25) (undo-tree-id83 . -25) (undo-tree-id84 . -25) (undo-tree-id85 . -25) (undo-tree-id86 . -25) (undo-tree-id87 . -25) (undo-tree-id88 . -25) (undo-tree-id89 . -25) (undo-tree-id90 . -25) (undo-tree-id91 . -25) (undo-tree-id92 . -25) (undo-tree-id93 . -25) (undo-tree-id94 . -25) (undo-tree-id95 . -25) (undo-tree-id96 . -25) (undo-tree-id97 . -25) (undo-tree-id98 . -25) (undo-tree-id99 . -25) (undo-tree-id100 . -25) (undo-tree-id101 . -25) (undo-tree-id102 . -25) (undo-tree-id103 . -25) (undo-tree-id104 . -25) (undo-tree-id105 . -25) (undo-tree-id106 . -25) (undo-tree-id107 . -25) (undo-tree-id108 . -25) (undo-tree-id109 . -25) (undo-tree-id110 . -25) (undo-tree-id111 . -25) (undo-tree-id112 . -25) (undo-tree-id113 . -25) (undo-tree-id114 . -25) (undo-tree-id115 . -25) (undo-tree-id116 . -25) (undo-tree-id117 . -25) (undo-tree-id118 . -25) (undo-tree-id119 . -25) (undo-tree-id120 . -25) (undo-tree-id121 . -25) (undo-tree-id122 . -25) (undo-tree-id123 . -25) (undo-tree-id124 . -25) (undo-tree-id125 . -25) (undo-tree-id126 . -25) (undo-tree-id127 . -25) (undo-tree-id128 . -25) (undo-tree-id129 . -25) (undo-tree-id130 . -25) (undo-tree-id131 . -25) (undo-tree-id132 . -25) (t 25282 19307 475221 535000)) nil (25282 19315 219385 195000) 0 nil])
([nil current ((37 . 38)) nil (25282 19315 218395 936000) 0 nil])
nil

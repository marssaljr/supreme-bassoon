(undo-tree-save-format-version . 1)
"be4189ecaff99effbbebc11ff07fce56aaf9948f"
[nil nil nil nil (25282 19343 769828 852000) 0 nil]
([nil nil ((#("\"\"\"config URL Configuration

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/4.0/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
\"\"\"
" 0 2 (fontified t face font-lock-doc-face) 2 3 (syntax-table (15) fontified t face font-lock-doc-face) 3 626 (fontified t face font-lock-doc-face) 626 627 (fontified t syntax-table (15) face font-lock-doc-face) 627 629 (fontified t face font-lock-doc-face) 629 630 (fontified t)) . 1) (undo-tree-id2 . -629) (undo-tree-id3 . -626) (undo-tree-id4 . -630) (undo-tree-id5 . -629) (undo-tree-id6 . -629) (undo-tree-id7 . -629) 630 (t 25272 54101 236333 965000)) nil (25282 19343 769820 794000) 0 nil])
([nil current ((1 . 439) (#("from django.contrib import admin
from django.urls import path, include
from django.conf import settings
from django.conf.urls.static import static

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('store.urls')),
		path('user/', include('user.urls')),
]

urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)
urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
" 0 4 (fontified t face font-lock-keyword-face) 4 20 (fontified t) 20 26 (fontified t face font-lock-keyword-face) 26 33 (fontified t) 33 37 (fontified t face font-lock-keyword-face) 37 50 (fontified t) 50 56 (fontified t face font-lock-keyword-face) 56 71 (fontified t) 71 75 (fontified t face font-lock-keyword-face) 75 88 (fontified t) 88 94 (fontified t face font-lock-keyword-face) 94 104 (fontified t) 104 108 (fontified t face font-lock-keyword-face) 108 133 (fontified t) 133 139 (fontified t face font-lock-keyword-face) 139 148 (fontified t) 148 159 (fontified t face font-lock-variable-name-face) 159 162 (fontified t) 162 163 (fontified t face (rainbow-delimiters-depth-1-face)) 163 172 (fontified t) 172 173 (fontified t face (rainbow-delimiters-depth-2-face)) 173 181 (fontified t face font-lock-string-face) 181 198 (fontified t) 198 199 (fontified t face (rainbow-delimiters-depth-2-face)) 199 209 (fontified t) 209 210 (fontified t face (rainbow-delimiters-depth-2-face)) 210 212 (fontified t face font-lock-string-face) 212 221 (fontified t) 221 222 (fontified t face (rainbow-delimiters-depth-3-face)) 222 234 (fontified t face font-lock-string-face) 234 235 (fontified t face (rainbow-delimiters-depth-3-face)) 235 236 (fontified t face (rainbow-delimiters-depth-2-face)) 236 244 (fontified t) 244 245 (fontified t face (rainbow-delimiters-depth-2-face)) 245 252 (fontified t face font-lock-string-face) 252 261 (fontified t) 261 262 (fontified t face (rainbow-delimiters-depth-3-face)) 262 273 (fontified t face font-lock-string-face) 273 274 (fontified t face (rainbow-delimiters-depth-3-face)) 274 275 (fontified t face (rainbow-delimiters-depth-2-face)) 275 277 (fontified t) 277 278 (fontified t face (rainbow-delimiters-depth-1-face)) 278 280 (fontified t) 280 291 (fontified t face font-lock-variable-name-face) 291 301 (fontified t) 301 302 (fontified t face (rainbow-delimiters-depth-1-face)) 302 357 (fontified t) 357 358 (fontified t face (rainbow-delimiters-depth-1-face)) 358 380 (fontified t) 380 381 (fontified t face (rainbow-delimiters-depth-1-face)) 381 434 (fontified t) 434 435 (fontified t face (rainbow-delimiters-depth-1-face)) 435 436 (fontified t)) . 1) (undo-tree-id0 . -33) (undo-tree-id1 . 436)) nil (25282 19343 769774 949000) 0 nil])
nil

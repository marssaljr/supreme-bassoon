(undo-tree-save-format-version . 1)
"d0b172e597099f72480b326336c13dcf5aa3c759"
[nil nil nil nil (25282 18927 663050 903000) 0 nil]
([nil nil ((1 . 2365) (#("from django.contrib.auth.decorators import login_required
from django.shortcuts import render, redirect
from django.contrib.auth.models import User
from user.models import Profile
from django.contrib import auth

# Create your views here.
def register(request):
	request.session['error']=''
	if request.method==\"GET\":
		if request.user.is_authenticated:
			return redirect('/')
		return render(request, 'register.html')
	elif request.method=='POST':
		username=request.POST.get('username')
		email=request.POST.get('email')
		password=request.POST.get('password')
		if len(username.strip())==0 or len(email.strip())==0 or len(password.strip())==0:
			request.session['error']='Email, Senha ou Usuario nao foi digitado!'
			return redirect('/user/register')
		user=User.objects.filter(username=username)
		if user.exists():
			request.session['error']='Usuario ja existe!'
			return redirect('/user/register')
		else:
			try:
				user=User.objects.create_user(username=username, email=email, password=password)
				user.save()
				profile=Profile.objects.create(user=user.first())
				profile.save()
				request.session['error']='Usuario registrado!'
				return redirect('/user/login')
			except:
				return redirect('/user/register')

def login(request):
	if request.method=='GET':
		if request.user.is_authenticated:
			return redirect('/')
		return render(request,'login.html')
	elif request.method=='POST':
		username=request.POST.get('username')
		password=request.POST.get('password')
		user=auth.authenticate(username=username, password=password)
		if not user:
			return redirect('/user/login')
		else:
			auth.login(request, user)
			return redirect('/')

def logout(request):
	auth.logout(request)
	return redirect('/user/login')

@login_required(login_url=\"/users/login\")
def profile(request):
	userId=request.user.id
	user=Profile.objects.get(id=userId)
	return render(request, 'profile.html', {'user': user})
" 0 4 (fontified t face font-lock-keyword-face) 4 36 (fontified t) 36 42 (fontified t face font-lock-keyword-face) 42 58 (fontified t) 58 62 (fontified t face font-lock-keyword-face) 62 80 (fontified t) 80 86 (fontified t face font-lock-keyword-face) 86 104 (fontified t) 104 108 (fontified t face font-lock-keyword-face) 108 136 (fontified t) 136 142 (fontified t face font-lock-keyword-face) 142 148 (fontified t) 148 152 (fontified t face font-lock-keyword-face) 152 165 (fontified t) 165 171 (fontified t face font-lock-keyword-face) 171 180 (fontified t) 180 184 (fontified t face font-lock-keyword-face) 184 200 (fontified t) 200 206 (fontified t face font-lock-keyword-face) 206 213 (fontified t) 213 215 (fontified t face font-lock-comment-delimiter-face) 215 239 (fontified t face font-lock-comment-face) 239 242 (fontified t face font-lock-keyword-face) 242 243 (fontified t) 243 251 (fontified t face font-lock-function-name-face) 251 252 (fontified t face (rainbow-delimiters-depth-1-face)) 252 259 (fontified t) 259 260 (fontified t face (rainbow-delimiters-depth-1-face)) 260 271 (fontified t) 271 278 (fontified t face font-lock-variable-name-face) 278 279 (fontified t face (rainbow-delimiters-depth-1-face)) 279 286 (fontified t face font-lock-string-face) 286 287 (fontified t face (rainbow-delimiters-depth-1-face)) 287 288 (fontified t) 288 290 (fontified t face font-lock-string-face) 290 292 (fontified t) 292 294 (fontified t face font-lock-keyword-face) 294 311 (fontified t) 311 316 (fontified t face font-lock-string-face) 316 320 (fontified t) 320 322 (fontified t face font-lock-keyword-face) 322 357 (fontified t) 357 363 (fontified t face font-lock-keyword-face) 363 372 (fontified t) 372 373 (fontified t face (rainbow-delimiters-depth-1-face)) 373 376 (fontified t face font-lock-string-face) 376 377 (fontified t face (rainbow-delimiters-depth-1-face)) 377 380 (fontified t) 380 386 (fontified t face font-lock-keyword-face) 386 393 (fontified t) 393 394 (fontified t face (rainbow-delimiters-depth-1-face)) 394 403 (fontified t) 403 418 (fontified t face font-lock-string-face) 418 419 (fontified t face (rainbow-delimiters-depth-1-face)) 419 421 (fontified t) 421 425 (fontified t face font-lock-keyword-face) 425 442 (fontified t) 442 448 (fontified t face font-lock-string-face) 448 477 (fontified t) 477 478 (fontified t face (rainbow-delimiters-depth-1-face)) 478 488 (fontified t face font-lock-string-face) 488 489 (fontified t face (rainbow-delimiters-depth-1-face)) 489 514 (fontified t) 514 515 (fontified t face (rainbow-delimiters-depth-1-face)) 515 522 (fontified t face font-lock-string-face) 522 523 (fontified t face (rainbow-delimiters-depth-1-face)) 523 551 (fontified t) 551 552 (fontified t face (rainbow-delimiters-depth-1-face)) 552 562 (fontified t face font-lock-string-face) 562 563 (fontified t face (rainbow-delimiters-depth-1-face)) 563 566 (fontified t) 566 568 (fontified t face font-lock-keyword-face) 568 569 (fontified t) 569 572 (fontified t face font-lock-builtin-face) 572 573 (fontified t face (rainbow-delimiters-depth-1-face)) 573 587 (fontified t) 587 588 (fontified t face (rainbow-delimiters-depth-2-face)) 588 589 (fontified t face (rainbow-delimiters-depth-2-face)) 589 590 (fontified t face (rainbow-delimiters-depth-1-face)) 590 594 (fontified t) 594 596 (fontified t face font-lock-keyword-face) 596 597 (fontified t) 597 600 (fontified t face font-lock-builtin-face) 600 601 (fontified t face (rainbow-delimiters-depth-1-face)) 601 612 (fontified t) 612 613 (fontified t face (rainbow-delimiters-depth-2-face)) 613 614 (fontified t face (rainbow-delimiters-depth-2-face)) 614 615 (fontified t face (rainbow-delimiters-depth-1-face)) 615 619 (fontified t) 619 621 (fontified t face font-lock-keyword-face) 621 622 (fontified t) 622 625 (fontified t face font-lock-builtin-face) 625 626 (fontified t face (rainbow-delimiters-depth-1-face)) 626 640 (fontified t) 640 641 (fontified t face (rainbow-delimiters-depth-2-face)) 641 642 (fontified t face (rainbow-delimiters-depth-2-face)) 642 643 (fontified t face (rainbow-delimiters-depth-1-face)) 643 666 (fontified t) 666 667 (fontified t face (rainbow-delimiters-depth-1-face)) 667 674 (fontified t face font-lock-string-face) 674 675 (fontified t face (rainbow-delimiters-depth-1-face)) 675 676 (fontified t) 676 719 (fontified t face font-lock-string-face) 719 723 (fontified t) 723 729 (fontified t face font-lock-keyword-face) 729 738 (fontified t) 738 739 (fontified t face (rainbow-delimiters-depth-1-face)) 739 755 (fontified t face font-lock-string-face) 755 756 (fontified t face (rainbow-delimiters-depth-1-face)) 756 777 (fontified t) 777 783 (fontified t face font-lock-builtin-face) 783 784 (fontified t face (rainbow-delimiters-depth-1-face)) 784 801 (fontified t) 801 802 (fontified t face (rainbow-delimiters-depth-1-face)) 802 805 (fontified t) 805 807 (fontified t face font-lock-keyword-face) 807 819 (fontified t) 819 820 (fontified t face (rainbow-delimiters-depth-1-face)) 820 821 (fontified t face (rainbow-delimiters-depth-1-face)) 821 841 (fontified t) 841 842 (fontified t face (rainbow-delimiters-depth-1-face)) 842 849 (fontified t face font-lock-string-face) 849 850 (fontified t face (rainbow-delimiters-depth-1-face)) 850 851 (fontified t) 851 871 (fontified t face font-lock-string-face) 871 875 (fontified t) 875 881 (fontified t face font-lock-keyword-face) 881 890 (fontified t) 890 891 (fontified t face (rainbow-delimiters-depth-1-face)) 891 907 (fontified t face font-lock-string-face) 907 908 (fontified t face (rainbow-delimiters-depth-1-face)) 908 911 (fontified t) 911 915 (fontified t face font-lock-keyword-face) 915 920 (fontified t) 920 923 (fontified t face font-lock-keyword-face) 923 958 (fontified t) 958 959 (fontified t face (rainbow-delimiters-depth-1-face)) 959 1008 (fontified t) 1008 1009 (fontified t face (rainbow-delimiters-depth-1-face)) 1009 1023 (fontified t) 1023 1024 (fontified t face (rainbow-delimiters-depth-1-face)) 1024 1025 (fontified t face (rainbow-delimiters-depth-1-face)) 1025 1060 (fontified t) 1060 1061 (fontified t face (rainbow-delimiters-depth-1-face)) 1061 1076 (fontified t) 1076 1077 (fontified t face (rainbow-delimiters-depth-2-face)) 1077 1078 (fontified t face (rainbow-delimiters-depth-2-face)) 1078 1079 (fontified t face (rainbow-delimiters-depth-1-face)) 1079 1096 (fontified t) 1096 1097 (fontified t face (rainbow-delimiters-depth-1-face)) 1097 1098 (fontified t face (rainbow-delimiters-depth-1-face)) 1098 1118 (fontified t) 1118 1119 (fontified t face (rainbow-delimiters-depth-1-face)) 1119 1126 (fontified t face font-lock-string-face) 1126 1127 (fontified t face (rainbow-delimiters-depth-1-face)) 1127 1128 (fontified t) 1128 1149 (fontified t face font-lock-string-face) 1149 1154 (fontified t) 1154 1160 (fontified t face font-lock-keyword-face) 1160 1169 (fontified t) 1169 1170 (fontified t face (rainbow-delimiters-depth-1-face)) 1170 1183 (fontified t face font-lock-string-face) 1183 1184 (fontified t face (rainbow-delimiters-depth-1-face)) 1184 1188 (fontified t) 1188 1194 (fontified t face font-lock-keyword-face) 1194 1200 (fontified t) 1200 1206 (fontified t face font-lock-keyword-face) 1206 1215 (fontified t) 1215 1216 (fontified t face (rainbow-delimiters-depth-1-face)) 1216 1232 (fontified t face font-lock-string-face) 1232 1233 (fontified t face (rainbow-delimiters-depth-1-face)) 1233 1235 (fontified t) 1235 1238 (fontified t face font-lock-keyword-face) 1238 1239 (fontified t) 1239 1244 (fontified t face font-lock-function-name-face) 1244 1245 (fontified t face (rainbow-delimiters-depth-1-face)) 1245 1252 (fontified t) 1252 1253 (fontified t face (rainbow-delimiters-depth-1-face)) 1253 1256 (fontified t) 1256 1258 (fontified t face font-lock-keyword-face) 1258 1275 (fontified t) 1275 1280 (fontified t face font-lock-string-face) 1280 1284 (fontified t) 1284 1286 (fontified t face font-lock-keyword-face) 1286 1321 (fontified t) 1321 1327 (fontified t face font-lock-keyword-face) 1327 1336 (fontified t) 1336 1337 (fontified t face (rainbow-delimiters-depth-1-face)) 1337 1340 (fontified t face font-lock-string-face) 1340 1341 (fontified t face (rainbow-delimiters-depth-1-face)) 1341 1344 (fontified t) 1344 1350 (fontified t face font-lock-keyword-face) 1350 1357 (fontified t) 1357 1358 (fontified t face (rainbow-delimiters-depth-1-face)) 1358 1366 (fontified t) 1366 1378 (fontified t face font-lock-string-face) 1378 1379 (fontified t face (rainbow-delimiters-depth-1-face)) 1379 1381 (fontified t) 1381 1385 (fontified t face font-lock-keyword-face) 1385 1402 (fontified t) 1402 1408 (fontified t face font-lock-string-face) 1408 1437 (fontified t) 1437 1438 (fontified t face (rainbow-delimiters-depth-1-face)) 1438 1448 (fontified t face font-lock-string-face) 1448 1449 (fontified t face (rainbow-delimiters-depth-1-face)) 1449 1477 (fontified t) 1477 1478 (fontified t face (rainbow-delimiters-depth-1-face)) 1478 1488 (fontified t face font-lock-string-face) 1488 1489 (fontified t face (rainbow-delimiters-depth-1-face)) 1489 1500 (fontified t) 1500 1514 (fontified t) 1514 1515 (fontified t face (rainbow-delimiters-depth-1-face)) 1515 1551 (fontified t) 1551 1552 (fontified t face (rainbow-delimiters-depth-1-face)) 1552 1553 (fontified t) 1553 1555 (fontified t) 1555 1557 (fontified t face font-lock-keyword-face) 1557 1558 (fontified t) 1558 1561 (fontified t face font-lock-keyword-face) 1561 1571 (fontified t) 1571 1577 (fontified t face font-lock-keyword-face) 1577 1586 (fontified t) 1586 1587 (fontified t face (rainbow-delimiters-depth-1-face)) 1587 1600 (fontified t face font-lock-string-face) 1600 1601 (fontified t face (rainbow-delimiters-depth-1-face)) 1601 1604 (fontified t) 1604 1608 (fontified t face font-lock-keyword-face) 1608 1623 (fontified t) 1623 1624 (fontified t face (rainbow-delimiters-depth-1-face)) 1624 1637 (fontified t) 1637 1638 (fontified t face (rainbow-delimiters-depth-1-face)) 1638 1642 (fontified t) 1642 1648 (fontified t face font-lock-keyword-face) 1648 1657 (fontified t) 1657 1658 (fontified t face (rainbow-delimiters-depth-1-face)) 1658 1661 (fontified t face font-lock-string-face) 1661 1662 (fontified t face (rainbow-delimiters-depth-1-face)) 1662 1664 (fontified t) 1664 1667 (fontified t face font-lock-keyword-face) 1667 1668 (fontified t) 1668 1674 (fontified t face font-lock-function-name-face) 1674 1675 (fontified t face (rainbow-delimiters-depth-1-face)) 1675 1682 (fontified t) 1682 1683 (fontified t face (rainbow-delimiters-depth-1-face)) 1683 1697 (fontified t) 1697 1698 (fontified t face (rainbow-delimiters-depth-1-face)) 1698 1705 (fontified t) 1705 1706 (fontified t face (rainbow-delimiters-depth-1-face)) 1706 1708 (fontified t) 1708 1714 (fontified t face font-lock-keyword-face) 1714 1723 (fontified t) 1723 1724 (fontified t face (rainbow-delimiters-depth-1-face)) 1724 1737 (fontified t face font-lock-string-face) 1737 1738 (fontified t face (rainbow-delimiters-depth-1-face)) 1738 1740 (fontified t) 1740 1755 (fontified t face font-lock-type-face) 1755 1756 (fontified t face (rainbow-delimiters-depth-1-face)) 1756 1766 (fontified t) 1766 1780 (fontified t face font-lock-string-face) 1780 1781 (fontified t face (rainbow-delimiters-depth-1-face)) 1781 1782 (fontified t) 1782 1785 (fontified t face font-lock-keyword-face) 1785 1786 (fontified t) 1786 1793 (fontified t face font-lock-function-name-face) 1793 1794 (fontified t face (rainbow-delimiters-depth-1-face)) 1794 1801 (fontified t) 1801 1802 (fontified t face (rainbow-delimiters-depth-1-face)) 1802 1825 (fontified t) 1825 1827 (fontified t face font-lock-builtin-face) 1827 1853 (fontified t) 1853 1854 (fontified t face (rainbow-delimiters-depth-1-face)) 1854 1856 (fontified t face font-lock-builtin-face) 1856 1863 (fontified t) 1863 1864 (fontified t face (rainbow-delimiters-depth-1-face)) 1864 1866 (fontified t) 1866 1872 (fontified t face font-lock-keyword-face) 1872 1879 (fontified t) 1879 1880 (fontified t face (rainbow-delimiters-depth-1-face)) 1880 1889 (fontified t) 1889 1903 (fontified t face font-lock-string-face) 1903 1905 (fontified t) 1905 1906 (fontified t face (rainbow-delimiters-depth-2-face)) 1906 1912 (fontified t face font-lock-string-face) 1912 1918 (fontified t) 1918 1919 (fontified t face (rainbow-delimiters-depth-2-face)) 1919 1920 (fontified t face (rainbow-delimiters-depth-1-face)) 1920 1921 (fontified t)) . -1) (undo-tree-id0 . -1921) (undo-tree-id1 . -1921) (undo-tree-id2 . -1342) (undo-tree-id3 . -1379) (undo-tree-id4 . -1920) (undo-tree-id5 . -1921) (undo-tree-id6 . -1804) (undo-tree-id7 . -1921) (undo-tree-id8 . -1921) (t 25280 55682 756233 85000)) nil (25282 18927 663034 583000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . -2203) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 2204 (t 25282 18927 655216 605000)) nil (25283 14055 825635 869000) 0 nil])
([nil nil ((#("        else:
" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 14 (fontified t)) . 1084) (undo-tree-id95 . -13) (undo-tree-id96 . -14) (t 25283 14055 840575 132000)) nil (25283 15511 393270 134000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1477) (#(" " 0 1 (fontified t)) . 1477) (#(" " 0 1 (fontified t)) . 1477) (#(" " 0 1 (fontified t)) . 1477) (1096 . 1109) (#("
" 0 1 (fontified t)) . -1096) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 1097 (#("    " 0 4 (fontified t)) . -1097) (undo-tree-id91 . -4) 1101 (#("    " 0 4 (fontified t)) . -1101) (undo-tree-id92 . -4) 1105 (#("    " 0 4 (fontified t)) . -1105) (undo-tree-id93 . -4) 1109 (1108 . 1109) 1105 (#(" " 0 1 (fontified t)) . 1105) (#(" " 0 1 (fontified t)) . 1105) (#(" " 0 1 (fontified t)) . 1105) (#(" " 0 1 (fontified t)) . 1105) (#(" " 0 1 (fontified t)) . 1105) (#("    " 0 4 (fontified t)) . -1092) (undo-tree-id94 . -4) 1096) nil (25283 15511 393239 439000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1262) (undo-tree-id86 . -4) 1266 (#("    " 0 4 (fontified t)) . -1238) (undo-tree-id87 . -4) 1242 (#("    " 0 4 (fontified t)) . -1224) (undo-tree-id88 . -4) 1228) nil (25283 15511 393178 456000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1414) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#(" " 0 1 (fontified t)) . 1414) (#(" " 0 1 (fontified t)) . 1414) (#(" " 0 1 (fontified t)) . 1414) (#(" " 0 1 (fontified t)) . 1353) (undo-tree-id84 . -1) (#(" " 0 1 (fontified t)) . 1353) (#(" " 0 1 (fontified t)) . 1353) (#(" " 0 1 (fontified t)) . 1353) (#("    " 0 4 (fontified t)) . -1326) (undo-tree-id85 . -4) 1330) nil (25283 15511 393135 386000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1473) (undo-tree-id97 . -4) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (undo-tree-id148 . -3) (undo-tree-id149 . -3) (undo-tree-id150 . -3) (undo-tree-id151 . -3) (undo-tree-id152 . -3) (undo-tree-id153 . -3) (undo-tree-id154 . -3) (undo-tree-id155 . -3) (undo-tree-id156 . -3) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) 1477 (t 25283 15511 390594 26000)) nil (25283 15516 647094 573000) 0 nil])
([nil nil ((1 . 2306) (#("from django.contrib.auth.decorators import login_required
from django.shortcuts import render, redirect
from django.contrib.auth.models import User
from user.models import Profile
from django.contrib import auth

# Create your views here.
def register(request):
    request.session[\"error\"] = \"\"
    if request.method == \"GET\":
        if request.user.is_authenticated:
            return redirect(\"/\")
        return render(request, \"register.html\")
    elif request.method == \"POST\":
        username = request.POST.get(\"username\")
        email = request.POST.get(\"email\")
        password = request.POST.get(\"password\")
        if (
            len(username.strip()) == 0
            or len(email.strip()) == 0
            or len(password.strip()) == 0
        ):
            request.session[\"error\"] = \"Email, Senha ou Usuario nao foi digitado!\"
            return redirect(\"/user/register\")
        user = User.objects.filter(username=username)
        if user.exists():
            request.session[\"error\"] = \"Usuario ja existe!\"
            return redirect(\"/user/register\")
        try:
            user = User.objects.create_user(
                    username=username, email=email, password=password
            )
            user.save()
            profile = Profile.objects.create(user=user.first())
            profile.save()
            request.session[\"error\"] = \"Usuario registrado!\"
            return redirect(\"/user/login\")
        except:
            return redirect(\"/user/register\")


def login(request):
    if request.method == \"GET\":
        if request.user.is_authenticated:
            return redirect(\"/\")
        return render(request, \"login.html\")
    elif request.method == \"POST\":
        username = request.POST.get(\"username\")
        password = request.POST.get(\"password\")
        user = auth.authenticate(username=username, password=password)
        if not user:
            return redirect(\"/user/login\")
        else:
            auth.login(request, user)
            return redirect(\"/\")


def logout(request):
    auth.logout(request)
    return redirect(\"/user/login\")


@login_required(login_url=\"/user/login\")
def profile(request):
    userId = request.user.id
    user = Profile.objects.get(id=userId)
    return render(request, \"profile.html\", {\"user\": user})
" 0 4 (face font-lock-keyword-face fontified t) 4 36 (fontified t) 36 42 (face font-lock-keyword-face fontified t) 42 58 (fontified t) 58 62 (face font-lock-keyword-face fontified t) 62 80 (fontified t) 80 86 (face font-lock-keyword-face fontified t) 86 104 (fontified t) 104 108 (face font-lock-keyword-face fontified t) 108 136 (fontified t) 136 142 (face font-lock-keyword-face fontified t) 142 148 (fontified t) 148 152 (face font-lock-keyword-face fontified t) 152 165 (fontified t) 165 171 (face font-lock-keyword-face fontified t) 171 180 (fontified t) 180 184 (face font-lock-keyword-face fontified t) 184 200 (fontified t) 200 206 (face font-lock-keyword-face fontified t) 206 213 (fontified t) 213 215 (face font-lock-comment-delimiter-face fontified t) 215 239 (face font-lock-comment-face fontified t) 239 242 (face font-lock-keyword-face fontified t) 242 243 (fontified t) 243 251 (face font-lock-function-name-face fontified t) 251 252 (face (rainbow-delimiters-depth-1-face) fontified t) 252 259 (fontified t) 259 260 (face (rainbow-delimiters-depth-1-face) fontified t) 260 274 (fontified t) 274 281 (face font-lock-variable-name-face fontified t) 281 282 (face (rainbow-delimiters-depth-1-face) fontified t) 282 289 (face font-lock-string-face fontified t) 289 290 (face (rainbow-delimiters-depth-1-face) fontified t) 290 293 (fontified t) 293 295 (face font-lock-string-face fontified t) 295 300 (fontified t) 300 302 (face font-lock-keyword-face fontified t) 302 321 (fontified t) 321 326 (face font-lock-string-face fontified t) 326 336 (fontified t) 336 338 (face font-lock-keyword-face fontified t) 338 382 (fontified t) 382 388 (face font-lock-keyword-face fontified t) 388 397 (fontified t) 397 398 (face (rainbow-delimiters-depth-1-face) fontified t) 398 401 (face font-lock-string-face fontified t) 401 402 (face (rainbow-delimiters-depth-1-face) fontified t) 402 411 (fontified t) 411 417 (face font-lock-keyword-face fontified t) 417 424 (fontified t) 424 425 (face (rainbow-delimiters-depth-1-face) fontified t) 425 434 (fontified t) 434 449 (face font-lock-string-face fontified t) 449 450 (face (rainbow-delimiters-depth-1-face) fontified t) 450 455 (fontified t) 455 459 (face font-lock-keyword-face fontified t) 459 478 (fontified t) 478 484 (face font-lock-string-face fontified t) 484 521 (fontified t) 521 522 (face (rainbow-delimiters-depth-1-face) fontified t) 522 532 (face font-lock-string-face fontified t) 532 533 (face (rainbow-delimiters-depth-1-face) fontified t) 533 566 (fontified t) 566 567 (face (rainbow-delimiters-depth-1-face) fontified t) 567 574 (face font-lock-string-face fontified t) 574 575 (face (rainbow-delimiters-depth-1-face) fontified t) 575 611 (fontified t) 611 612 (face (rainbow-delimiters-depth-1-face) fontified t) 612 622 (face font-lock-string-face fontified t) 622 623 (face (rainbow-delimiters-depth-1-face) fontified t) 623 632 (fontified t) 632 634 (face font-lock-keyword-face fontified t) 634 635 (fontified t) 635 636 (face (rainbow-delimiters-depth-1-face) fontified t) 636 649 (fontified t) 649 652 (face font-lock-builtin-face fontified t) 652 653 (face (rainbow-delimiters-depth-2-face) fontified t) 653 667 (fontified t) 667 668 (face (rainbow-delimiters-depth-3-face) fontified t) 668 669 (face (rainbow-delimiters-depth-3-face) fontified t) 669 670 (face (rainbow-delimiters-depth-2-face) fontified t) 670 688 (fontified t) 688 690 (face font-lock-keyword-face fontified t) 690 691 (fontified t) 691 694 (face font-lock-builtin-face fontified t) 694 695 (face (rainbow-delimiters-depth-2-face) fontified t) 695 706 (fontified t) 706 707 (face (rainbow-delimiters-depth-3-face) fontified t) 707 708 (face (rainbow-delimiters-depth-3-face) fontified t) 708 709 (face (rainbow-delimiters-depth-2-face) fontified t) 709 727 (fontified t) 727 729 (face font-lock-keyword-face fontified t) 729 730 (fontified t) 730 733 (face font-lock-builtin-face fontified t) 733 734 (face (rainbow-delimiters-depth-2-face) fontified t) 734 748 (fontified t) 748 749 (face (rainbow-delimiters-depth-3-face) fontified t) 749 750 (face (rainbow-delimiters-depth-3-face) fontified t) 750 751 (face (rainbow-delimiters-depth-2-face) fontified t) 751 765 (fontified t) 765 766 (face (rainbow-delimiters-depth-1-face) fontified t) 766 795 (fontified t) 795 796 (face (rainbow-delimiters-depth-1-face) fontified t) 796 803 (face font-lock-string-face fontified t) 803 804 (face (rainbow-delimiters-depth-1-face) fontified t) 804 807 (fontified t) 807 850 (face font-lock-string-face fontified t) 850 863 (fontified t) 863 869 (face font-lock-keyword-face fontified t) 869 878 (fontified t) 878 879 (face (rainbow-delimiters-depth-1-face) fontified t) 879 895 (face font-lock-string-face fontified t) 895 896 (face (rainbow-delimiters-depth-1-face) fontified t) 896 925 (fontified t) 925 931 (face font-lock-builtin-face fontified t) 931 932 (face (rainbow-delimiters-depth-1-face) fontified t) 932 949 (fontified t) 949 950 (face (rainbow-delimiters-depth-1-face) fontified t) 950 959 (fontified t) 959 961 (face font-lock-keyword-face fontified t) 961 973 (fontified t) 973 974 (face (rainbow-delimiters-depth-1-face) fontified t) 974 975 (face (rainbow-delimiters-depth-1-face) fontified t) 975 1004 (fontified t) 1004 1005 (face (rainbow-delimiters-depth-1-face) fontified t) 1005 1012 (face font-lock-string-face fontified t) 1012 1013 (face (rainbow-delimiters-depth-1-face) fontified t) 1013 1016 (fontified t) 1016 1036 (face font-lock-string-face fontified t) 1036 1049 (fontified t) 1049 1055 (face font-lock-keyword-face fontified t) 1055 1064 (fontified t) 1064 1065 (face (rainbow-delimiters-depth-1-face) fontified t) 1065 1081 (face font-lock-string-face fontified t) 1081 1082 (face (rainbow-delimiters-depth-1-face) fontified t) 1082 1083 (fontified t) 1083 1091 (fontified t) 1091 1094 (face font-lock-keyword-face fontified t) 1094 1108 (fontified t) 1108 1112 (fontified t) 1112 1139 (fontified t) 1139 1140 (face (rainbow-delimiters-depth-1-face) fontified t) 1140 1141 (fontified t) 1141 1211 (fontified t) 1211 1223 (fontified t) 1223 1224 (face (rainbow-delimiters-depth-1-face) fontified t) 1224 1225 (fontified t) 1225 1246 (fontified t) 1246 1247 (face (rainbow-delimiters-depth-1-face) fontified t) 1247 1248 (face (rainbow-delimiters-depth-1-face) fontified t) 1248 1249 (fontified t) 1249 1261 (fontified t) 1261 1268 (face font-lock-variable-name-face fontified t) 1268 1293 (fontified t) 1293 1294 (face (rainbow-delimiters-depth-1-face) fontified t) 1294 1309 (fontified t) 1309 1310 (face (rainbow-delimiters-depth-2-face) fontified t) 1310 1311 (face (rainbow-delimiters-depth-2-face) fontified t) 1311 1312 (face (rainbow-delimiters-depth-1-face) fontified t) 1312 1313 (fontified t) 1313 1337 (fontified t) 1337 1338 (face (rainbow-delimiters-depth-1-face) fontified t) 1338 1339 (face (rainbow-delimiters-depth-1-face) fontified t) 1339 1340 (fontified t) 1340 1360 (fontified t) 1360 1367 (face font-lock-variable-name-face fontified t) 1367 1368 (face (rainbow-delimiters-depth-1-face) fontified t) 1368 1375 (face font-lock-string-face fontified t) 1375 1376 (face (rainbow-delimiters-depth-1-face) fontified t) 1376 1379 (fontified t) 1379 1400 (face font-lock-string-face fontified t) 1400 1401 (fontified t) 1401 1413 (fontified t) 1413 1419 (face font-lock-keyword-face fontified t) 1419 1428 (fontified t) 1428 1429 (face (rainbow-delimiters-depth-1-face) fontified t) 1429 1442 (face font-lock-string-face fontified t) 1442 1443 (face (rainbow-delimiters-depth-1-face) fontified t) 1443 1444 (fontified t) 1444 1452 (fontified t) 1452 1458 (face font-lock-keyword-face fontified t) 1458 1460 (fontified t) 1460 1472 (fontified t) 1472 1478 (face font-lock-keyword-face fontified t) 1478 1487 (fontified t) 1487 1488 (face (rainbow-delimiters-depth-1-face) fontified t) 1488 1504 (face font-lock-string-face fontified t) 1504 1505 (face (rainbow-delimiters-depth-1-face) fontified t) 1505 1506 (fontified t) 1506 1508 (fontified t) 1508 1511 (face font-lock-keyword-face fontified t) 1511 1512 (fontified t) 1512 1517 (face font-lock-function-name-face fontified t) 1517 1518 (face (rainbow-delimiters-depth-1-face) fontified t) 1518 1525 (fontified t) 1525 1526 (face (rainbow-delimiters-depth-1-face) fontified t) 1526 1532 (fontified t) 1532 1534 (face font-lock-keyword-face fontified t) 1534 1553 (fontified t) 1553 1558 (face font-lock-string-face fontified t) 1558 1568 (fontified t) 1568 1570 (face font-lock-keyword-face fontified t) 1570 1614 (fontified t) 1614 1620 (face font-lock-keyword-face fontified t) 1620 1629 (fontified t) 1629 1630 (face (rainbow-delimiters-depth-1-face) fontified t) 1630 1633 (face font-lock-string-face fontified t) 1633 1634 (face (rainbow-delimiters-depth-1-face) fontified t) 1634 1643 (fontified t) 1643 1649 (face font-lock-keyword-face fontified t) 1649 1656 (fontified t) 1656 1657 (face (rainbow-delimiters-depth-1-face) fontified t) 1657 1666 (fontified t) 1666 1678 (face font-lock-string-face fontified t) 1678 1679 (face (rainbow-delimiters-depth-1-face) fontified t) 1679 1684 (fontified t) 1684 1688 (face font-lock-keyword-face fontified t) 1688 1707 (fontified t) 1707 1713 (face font-lock-string-face fontified t) 1713 1750 (fontified t) 1750 1751 (face (rainbow-delimiters-depth-1-face) fontified t) 1751 1761 (face font-lock-string-face fontified t) 1761 1762 (face (rainbow-delimiters-depth-1-face) fontified t) 1762 1798 (fontified t) 1798 1799 (face (rainbow-delimiters-depth-1-face) fontified t) 1799 1809 (face font-lock-string-face fontified t) 1809 1810 (face (rainbow-delimiters-depth-1-face) fontified t) 1810 1843 (fontified t) 1843 1844 (face (rainbow-delimiters-depth-1-face) fontified t) 1844 1880 (fontified t) 1880 1881 (face (rainbow-delimiters-depth-1-face) fontified t) 1881 1890 (fontified t) 1890 1892 (face font-lock-keyword-face fontified t) 1892 1893 (fontified t) 1893 1896 (face font-lock-keyword-face fontified t) 1896 1915 (fontified t) 1915 1921 (face font-lock-keyword-face fontified t) 1921 1930 (fontified t) 1930 1931 (face (rainbow-delimiters-depth-1-face) fontified t) 1931 1944 (face font-lock-string-face fontified t) 1944 1945 (face (rainbow-delimiters-depth-1-face) fontified t) 1945 1954 (fontified t) 1954 1958 (face font-lock-keyword-face fontified t) 1958 1982 (fontified t) 1982 1983 (face (rainbow-delimiters-depth-1-face) fontified t) 1983 1996 (fontified t) 1996 1997 (face (rainbow-delimiters-depth-1-face) fontified t) 1997 2010 (fontified t) 2010 2016 (face font-lock-keyword-face fontified t) 2016 2025 (fontified t) 2025 2026 (face (rainbow-delimiters-depth-1-face) fontified t) 2026 2029 (face font-lock-string-face fontified t) 2029 2030 (face (rainbow-delimiters-depth-1-face) fontified t) 2030 2033 (fontified t) 2033 2036 (face font-lock-keyword-face fontified t) 2036 2037 (fontified t) 2037 2043 (face font-lock-function-name-face fontified t) 2043 2044 (face (rainbow-delimiters-depth-1-face) fontified t) 2044 2051 (fontified t) 2051 2052 (face (rainbow-delimiters-depth-1-face) fontified t) 2052 2069 (fontified t) 2069 2070 (face (rainbow-delimiters-depth-1-face) fontified t) 2070 2077 (fontified t) 2077 2078 (face (rainbow-delimiters-depth-1-face) fontified t) 2078 2083 (fontified t) 2083 2089 (face font-lock-keyword-face fontified t) 2089 2098 (fontified t) 2098 2099 (face (rainbow-delimiters-depth-1-face) fontified t) 2099 2112 (face font-lock-string-face fontified t) 2112 2113 (face (rainbow-delimiters-depth-1-face) fontified t) 2113 2116 (fontified t) 2116 2131 (face font-lock-type-face fontified t) 2131 2132 (face (rainbow-delimiters-depth-1-face) fontified t) 2132 2142 (fontified t) 2142 2155 (face font-lock-string-face fontified t) 2155 2156 (face (rainbow-delimiters-depth-1-face) fontified t) 2156 2157 (fontified t) 2157 2160 (face font-lock-keyword-face fontified t) 2160 2161 (fontified t) 2161 2168 (face font-lock-function-name-face fontified t) 2168 2169 (face (rainbow-delimiters-depth-1-face) fontified t) 2169 2176 (fontified t) 2176 2177 (face (rainbow-delimiters-depth-1-face) fontified t) 2177 2183 (fontified t) 2183 2189 (fontified t) 2189 2205 (fontified t) 2205 2207 (face font-lock-builtin-face fontified t) 2207 2212 (fontified t) 2212 2216 (fontified t) 2216 2238 (fontified t) 2238 2239 (face (rainbow-delimiters-depth-1-face) fontified t) 2239 2241 (face font-lock-builtin-face fontified t) 2241 2248 (fontified t) 2248 2249 (face (rainbow-delimiters-depth-1-face) fontified t) 2249 2254 (fontified t) 2254 2260 (face font-lock-keyword-face fontified t) 2260 2267 (fontified t) 2267 2268 (face (rainbow-delimiters-depth-1-face) fontified t) 2268 2277 (fontified t) 2277 2291 (face font-lock-string-face fontified t) 2291 2293 (fontified t) 2293 2294 (face (rainbow-delimiters-depth-2-face) fontified t) 2294 2300 (face font-lock-string-face fontified t) 2300 2306 (fontified t) 2306 2307 (face (rainbow-delimiters-depth-2-face) fontified t) 2307 2308 (face (rainbow-delimiters-depth-1-face) fontified t) 2308 2309 (fontified t)) . 1) (undo-tree-id203 . -1083) (undo-tree-id204 . -534) (undo-tree-id205 . -1602) (undo-tree-id206 . 837) (undo-tree-id207 . -1460) (undo-tree-id208 . -1506) (undo-tree-id209 . -977) (undo-tree-id210 . -1471) (undo-tree-id211 . -1471) (t 25283 15516 640594 94000)) nil (25283 21345 496787 298000) 0 nil])
([nil nil ((1291 . 1293) (#("user" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 1291) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . -4) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -4) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -4) (undo-tree-id265 . -4) (undo-tree-id266 . -4) (undo-tree-id267 . -4) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -4) (undo-tree-id286 . -4) (undo-tree-id287 . -4) (undo-tree-id288 . -4) (undo-tree-id289 . -4) (undo-tree-id290 . -4) (undo-tree-id291 . -4) (undo-tree-id292 . -4) (undo-tree-id293 . -4) (undo-tree-id294 . -4) (undo-tree-id295 . -4) (undo-tree-id296 . -4) (undo-tree-id297 . -4) (undo-tree-id298 . -4) (undo-tree-id299 . -4) (undo-tree-id300 . -4) (undo-tree-id301 . -4) (undo-tree-id302 . -4) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (t 25283 15528 280594 245000)) ((1291 . 1295) (#("id" 0 2 (face font-lock-builtin-face fontified t)) . 1291)) (25283 21346 743868 485000) 0 nil])
([nil nil ((1643 . 1645) (#(":" 0 1 (face font-lock-string-face fontified t)) . -1643) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#(")" 0 1 (face font-lock-string-face fontified t)) . -1644) (undo-tree-id315 . -1) (undo-tree-id316 . 1) (undo-tree-id317 . -1) 1645 (1625 . 1645) (1608 . 1625) (1544 . 1560) (#("            " 0 12 (fontified t)) . 1544) (undo-tree-id318 . -12) 1556 (1513 . 1529) (#("            " 0 12 (fontified t)) . 1513) (undo-tree-id319 . -12) 1525 (1502 . 1506) (#("i" 0 1 (fontified t)) . -1502) (undo-tree-id320 . -1) (#("d" 0 1 (face font-lock-builtin-face fontified t)) . -1503) (undo-tree-id321 . -1) 1504 (#("." 0 1 (fontified t)) . -1509) (undo-tree-id322 . -1) (#("f" 0 1 (fontified t)) . -1510) (undo-tree-id323 . -1) (#("i" 0 1 (fontified t)) . -1511) (undo-tree-id324 . -1) (#("r" 0 1 (fontified t)) . -1512) (undo-tree-id325 . -1) (#("s" 0 1 (fontified t)) . -1513) (undo-tree-id326 . -1) (#("t" 0 1 (fontified t)) . -1514) (undo-tree-id327 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1515) (undo-tree-id328 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -1516) (undo-tree-id329 . -1) (undo-tree-id330 . 1) (undo-tree-id331 . -1) 1517 (1453 . 1469) (#("            " 0 12 (fontified t)) . 1453) (undo-tree-id332 . -12) (undo-tree-id333 . -12) 1465 (1445 . 1452) (#("." 0 1 (fontified t)) . -1445) (undo-tree-id334 . -1) 1446 (1434 . 1446) (1432 . 1434) (1427 . 1432) (1410 . 1427) (1405 . 1410) (1392 . 1405) (1391 . 1392) (1382 . 1391) (#("r" 0 1 (face font-lock-string-face fontified t)) . -1382) (undo-tree-id335 . -1) (undo-tree-id336 . -1) 1383 (1362 . 1383) (1345 . 1362) (1333 . 1345) (1320 . 1333) (1306 . 1320) (#("o" 0 1 (fontified t)) . -1306) (undo-tree-id337 . -1) (#("w" 0 1 (fontified t)) . -1307) (undo-tree-id338 . -1) (#("o" 0 1 (fontified t)) . -1308) (undo-tree-id339 . -1) (#("r" 0 1 (fontified t)) . -1309) 1310 (1292 . 1310) (#("-" 0 1 (fontified t)) . -1292) (undo-tree-id340 . -1) 1293 (1287 . 1293) (#("=" 0 1 (fontified t)) . -1287) (undo-tree-id341 . -1) 1288 (1287 . 1288) (1275 . 1287) (#("j" 0 1 (fontified t)) . -1275) (undo-tree-id342 . -1) (#("n" 0 1 (fontified t)) . -1276) (undo-tree-id343 . -1) 1277 (1265 . 1277) (#("u" 0 1 (fontified t)) . -1265) (undo-tree-id344 . -1) (#("s" 0 1 (fontified t)) . -1266) (undo-tree-id345 . -1) (#("e" 0 1 (fontified t)) . -1267) (undo-tree-id346 . -1) (#("r" 0 1 (fontified t)) . -1268) (undo-tree-id347 . -1) (#("." 0 1 (fontified t)) . -1269) (undo-tree-id348 . -1) 1270 (1258 . 1270) (1245 . 1258) (t 25283 21349 150669 803000)) nil (25283 21688 206799 129000) 0 nil])
([nil nil ((#("            return redirect(\"/user/login\")
" 0 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t) 28 41 (face font-lock-string-face fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 43 (fontified t)) . 1646) (undo-tree-id311 . 43) (undo-tree-id312 . -43)) nil (25283 21688 206526 847000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2406) (undo-tree-id362 . -1) (#("i" 0 1 (fontified t)) . -2407) (undo-tree-id363 . -1) (#("d" 0 1 (face font-lock-builtin-face fontified t)) . -2408) (undo-tree-id364 . -1) 2409 (#("I" 0 1 (fontified nil)) . -2450) (undo-tree-id365 . -1) (#("d" 0 1 (fontified t)) . -2451) (undo-tree-id366 . -1) 2452 (2441 . 2445) (#("i" 0 1 (fontified t)) . -2441) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (#("d" 0 1 (face font-lock-builtin-face fontified t)) . -2442) (undo-tree-id369 . -1) (undo-tree-id370 . -1) 2443 (t 25283 21688 210674 204000)) nil (25283 21770 843698 79000) 0 nil])
([nil nil ((#("    userId = request.user
" 0 4 (fontified t) 4 10 (face font-lock-variable-name-face fontified t) 10 25 (fontified t) 25 26 (fontified t)) . 2381) (undo-tree-id349 . 1) (undo-tree-id350 . -26) (undo-tree-id351 . -4) (undo-tree-id352 . -10) (undo-tree-id353 . -4) (undo-tree-id354 . -5) (undo-tree-id355 . -5) (undo-tree-id356 . -5) (undo-tree-id357 . -5) (undo-tree-id358 . -5) (undo-tree-id359 . -5) (undo-tree-id360 . -5) (undo-tree-id361 . -5)) nil (25283 21770 843630 314000) 0 nil])
([nil nil ((2423 . 2425) (2417 . 2423)) nil (25283 21770 843519 16000) 0 nil])
([nil nil ((#(", {\"user\": user}" 0 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-2-face) fontified t) 3 9 (face font-lock-string-face fontified t) 9 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-2-face) fontified t)) . 2472) (undo-tree-id371 . -15) (undo-tree-id372 . -15) (undo-tree-id373 . -15) (undo-tree-id374 . -10) (undo-tree-id375 . -15) (undo-tree-id376 . -16) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -16) (undo-tree-id385 . -16) (undo-tree-id386 . -16) (undo-tree-id387 . -16) (undo-tree-id388 . -16) (undo-tree-id389 . -16) (undo-tree-id390 . -16) (undo-tree-id391 . -16) (undo-tree-id392 . -16) (undo-tree-id393 . -16) (undo-tree-id394 . -16) (undo-tree-id395 . -16) (undo-tree-id396 . -16) (undo-tree-id397 . -16) (undo-tree-id398 . -16) (undo-tree-id399 . -16) (undo-tree-id400 . -16) (undo-tree-id401 . -16) (undo-tree-id402 . -16) (undo-tree-id403 . -16) (undo-tree-id404 . -16) (undo-tree-id405 . -16) (undo-tree-id406 . -16) (undo-tree-id407 . -16) (undo-tree-id408 . -16) (undo-tree-id409 . -16) (undo-tree-id410 . -16) (undo-tree-id411 . -16) (undo-tree-id412 . -15) (undo-tree-id413 . -15) (undo-tree-id414 . -15) (undo-tree-id415 . -15) (undo-tree-id416 . -15) (undo-tree-id417 . -15) (undo-tree-id418 . -15) (undo-tree-id419 . -15) (undo-tree-id420 . -15) (undo-tree-id421 . -15) (undo-tree-id422 . -15) (undo-tree-id423 . -15) (undo-tree-id424 . -15) (undo-tree-id425 . -15) (undo-tree-id426 . -15) (undo-tree-id427 . -15) (undo-tree-id428 . -15) (undo-tree-id429 . -15) (undo-tree-id430 . -15) (undo-tree-id431 . -15) (undo-tree-id432 . -15) (undo-tree-id433 . 1) (undo-tree-id434 . -16) (undo-tree-id435 . 14) (undo-tree-id436 . -3) (undo-tree-id437 . -15) (undo-tree-id438 . -15) (undo-tree-id439 . -15) (undo-tree-id440 . -15) (undo-tree-id441 . -15) (undo-tree-id442 . -15) (undo-tree-id443 . -15) (undo-tree-id444 . -15) (undo-tree-id445 . -15) (undo-tree-id446 . -15) (undo-tree-id447 . -15) (undo-tree-id448 . -15) (undo-tree-id449 . -15) (undo-tree-id450 . -15) (undo-tree-id451 . -15) (undo-tree-id452 . -15) (undo-tree-id453 . -15) (undo-tree-id454 . -15) (undo-tree-id455 . -15) (undo-tree-id456 . -15) (undo-tree-id457 . -15) (undo-tree-id458 . -15) (undo-tree-id459 . -15) (undo-tree-id460 . -15) (undo-tree-id461 . -15) (undo-tree-id462 . -15) (undo-tree-id463 . -15) (undo-tree-id464 . -15) (undo-tree-id465 . -15) (undo-tree-id466 . -15) (undo-tree-id467 . -15) (undo-tree-id468 . -15) (undo-tree-id469 . -15) (undo-tree-id470 . -15) (undo-tree-id471 . -15) (undo-tree-id472 . -15) (undo-tree-id473 . -15) 2487 (t 25283 21770 840675 276000)) nil (25283 22385 36283 327000) 0 nil])
([nil nil ((218 . 236) (#("." 0 1 (fontified t)) . -218) (undo-tree-id505 . -1) (#("f" 0 1 (fontified t)) . -219) (undo-tree-id506 . -1) (#("o" 0 1 (fontified t)) . -220) (undo-tree-id507 . -1) (#("r" 0 1 (face font-lock-keyword-face fontified t)) . -221) (undo-tree-id508 . -1) (#("m" 0 1 (fontified t)) . -222) (undo-tree-id509 . -1) (#("s" 0 1 (fontified t)) . -223) (undo-tree-id510 . -1) 224 (219 . 224) (#("v" 0 1 (fontified t)) . -219) (undo-tree-id511 . -1) 220 (213 . 220) (212 . 213) (t 25283 22385 70683 249000) 211) nil (25283 24910 759945 174000) 0 nil])
([nil nil ((nil rear-nonsticky nil 293 . 294) (nil fontified nil 236 . 294) (236 . 294) 235) nil (25283 24910 759890 206000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -218) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#("s" 0 1 (fontified t)) . -219) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("e" 0 1 (fontified t)) . -220) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (#("r" 0 1 (fontified t)) . -221) (undo-tree-id504 . -1) 222) nil (25283 24910 759878 20000) 0 nil])
([nil nil ((2569 . 2571) (2552 . 2569) (#("Update" 0 6 (fontified nil)) . -2552) (2552 . 2558) (#("UpdateProfileForm" 0 17 (fontified nil)) . -2552) (2552 . 2569) (#("Update" 0 6 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2552) (undo-tree-id490 . -6) 2558 (2552 . 2558) (#("P" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2552) (undo-tree-id491 . -1) (#("r" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2553) (undo-tree-id492 . -1) 2554 (2552 . 2554) (#("U" 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2552) (undo-tree-id493 . -1) 2553 (2537 . 2553) (2528 . 2537) (2526 . 2528) (2512 . 2526) (#("Update" 0 6 (fontified nil)) . -2512) (2512 . 2518) (#("UpdateUserForm" 0 14 (fontified nil)) . -2512) (2512 . 2526) (#("Update" 0 6 (fontified t)) . -2512) (undo-tree-id494 . -6) 2518 (2509 . 2518) (#("=" 0 1 (fontified t)) . -2509) (undo-tree-id495 . -1) 2510 (2504 . 2510) (#("=" 0 1 (fontified t)) . -2504) (undo-tree-id496 . -1) 2505 (2500 . 2505) (2491 . 2500) (2484 . 2491) (#("'" 0 1 (face font-lock-string-face fontified t)) . -2484) (undo-tree-id497 . -1) 2485 (2484 . 2485) (2463 . 2484) (2458 . 2463) 2457) nil (25283 24910 759817 629000) 0 nil])
([nil nil ((2555 . 2562) (2534 . 2555) (#("," 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2534) (undo-tree-id489 . -1) 2535 (2527 . 2535)) nil (25283 24910 759730 262000) 0 nil])
([nil nil ((2642 . 2648) (2639 . 2642) (2618 . 2639) (#(" " 0 1 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6))) . -2618) (undo-tree-id488 . -1) 2619 (2607 . 2619) (2605 . 2607)) nil (25283 24910 759712 255000) 0 nil])
([nil nil ((2772 . 2785) (2765 . 2772) (2753 . 2765) (#("profi" 0 5 (fontified nil)) . -2753) (2753 . 2758) (#("profile_form" 0 12 (fontified nil)) . -2753) (2753 . 2765) (#("profile" 0 7 (fontified t)) . -2753) (undo-tree-id479 . -7) (undo-tree-id480 . -1) 2760 (2755 . 2760) (2753 . 2755) (2740 . 2753) (2738 . 2740) (#("9" 0 1 (fontified t)) . -2738) (undo-tree-id481 . -1) (#(")" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -2739) (undo-tree-id482 . -1) (undo-tree-id483 . 1) (undo-tree-id484 . -1) 2740 (2724 . 2740) (2711 . 2724) (2702 . 2711) (2692 . 2702) (2671 . 2692) (2667 . 2671) (#("p" 0 1 (fontified t)) . -2667) (undo-tree-id485 . -1) 2668 (2659 . 2668) (2651 . 2659) (#("        " 0 8 (fontified nil)) . 2650) (undo-tree-id486 . -8) (undo-tree-id487 . -8) (2658 . 2659) (2649 . 2658) 2647) nil (25283 24910 759683 109000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2832 . 2833) (nil fontified nil 2785 . 2833) (2785 . 2833) 2784) nil (25283 24910 759487 244000) 0 nil])
([nil nil ((2859 . 2876) (2846 . 2859) (2836 . 2844) (2815 . 2836) (#("o" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("d" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("a" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("r" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("t" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("s" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("i" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("g" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("e" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("r" 0 1 (face font-lock-string-face fontified t)) . 2815) (#(" " 0 1 (face font-lock-string-face fontified t)) . 2815) (#("o" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("i" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("r" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("a" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("u" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("s" 0 1 (face font-lock-string-face fontified t)) . 2815) (#("U" 0 1 (face font-lock-string-face fontified t)) . 2815) (2802 . 2809) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2802) (undo-tree-id474 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -2803) (undo-tree-id475 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -2804) (undo-tree-id476 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -2805) (undo-tree-id477 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -2806) (undo-tree-id478 . -1) 2807) nil (25283 24910 759458 941000) 0 nil])
([nil nil ((2875 . 2880)) nil (25283 24910 759367 1000) 0 nil])
([nil nil ((2879 . 2886)) nil (25283 24910 759348 973000) 0 nil])
([nil nil ((2953 . 2961) (#("    " 0 4 (fontified t)) . 2953) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) (undo-tree-id534 . -4) (undo-tree-id535 . -4) (undo-tree-id536 . -4) (undo-tree-id537 . -4) 2957 (2899 . 2907) (#("    " 0 4 (fontified t)) . 2899) (undo-tree-id538 . 4) (undo-tree-id539 . -4) (undo-tree-id540 . -4) (undo-tree-id541 . -4) (undo-tree-id542 . -4) 2903 (#("    " 0 4 (fontified t)) . -2893) (undo-tree-id543 . -4) 2897 (2889 . 2897) (#("    " 0 4 (fontified nil)) . 2889) (2893 . 2898) (#("    " 0 4 (fontified t)) . -2893) (undo-tree-id544 . -4) (undo-tree-id545 . -4) 2897 (2888 . 2897) (t 25283 24910 760716 34000) 2887) nil (25283 24930 841313 853000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -2899) (undo-tree-id567 . -8) (undo-tree-id568 . -8) 2907 (2898 . 2907) (t 25283 24930 850716 295000) 2897) nil (25283 24991 434441 579000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3019 . 3020) (nil fontified nil 2899 . 3020) (2899 . 3020)) nil (25283 24991 434421 478000) 0 nil])
([nil nil ((3092 . 3093) (3037 . 3038) (2899 . 2907)) nil (25283 24991 434414 679000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3136) (undo-tree-id566 . -4) 3140 (3131 . 3140) 3130) nil (25283 24991 434406 354000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3235 . 3236) (nil fontified nil 3136 . 3236) (3136 . 3236) 3135) nil (25283 24991 434390 767000) 0 nil])
([nil nil ((3164 . 3172) (#("f" 0 1 (face font-lock-string-face fontified t)) . -3164) (undo-tree-id546 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -3165) (undo-tree-id547 . -1) 3166 (3160 . 3166) (#("u" 0 1 (face font-lock-string-face fontified t)) . -3160) (undo-tree-id548 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -3161) (undo-tree-id549 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -3162) (undo-tree-id550 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3163) (undo-tree-id551 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -3164) (undo-tree-id552 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -3165) (undo-tree-id553 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -3166) (undo-tree-id554 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3167) (undo-tree-id555 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -3168) (undo-tree-id556 . -1) (#("f" 0 1 (face font-lock-string-face fontified nil)) . -3169) (undo-tree-id557 . -1) (#("i" 0 1 (face font-lock-string-face fontified nil)) . -3170) (undo-tree-id558 . -1) 3171 (#("l" 0 1 (face font-lock-string-face fontified t)) . -3171) (undo-tree-id559 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -3172) (undo-tree-id560 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -3173) (undo-tree-id561 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -3174) (undo-tree-id562 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -3175) (undo-tree-id563 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -3176) (undo-tree-id564 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -3177) (undo-tree-id565 . -1) 3178) nil (25283 24991 434352 583000) 0 nil])
([nil nil ((1 . 3247) (#("from django.contrib.auth.decorators import login_required
from django.shortcuts import render, redirect
from django.contrib.auth.models import User
from user.models import Profile
from django.contrib import auth
from .forms import RegisterForm, LoginForm, UpdateUserForm, UpdateProfileForm

# Create your views here.
def register(request):
    request.session[\"error\"] = \"\"
    if request.method == \"GET\":
        if request.user.is_authenticated:
            return redirect(\"/\")
        return render(request, \"register.html\")
    elif request.method == \"POST\":
        username = request.POST.get(\"username\")
        email = request.POST.get(\"email\")
        password = request.POST.get(\"password\")
        if (
            len(username.strip()) == 0
            or len(email.strip()) == 0
            or len(password.strip()) == 0
        ):
            request.session[\"error\"] = \"Email, Senha ou Usuario nao foi digitado!\"
            return redirect(\"/user/register\")
        user = User.objects.filter(username=username)
        if user.exists():
            request.session[\"error\"] = \"Usuario ja existe!\"
            return redirect(\"/user/register\")
        try:
            user = User.objects.create_user(
                username=username, email=email, password=password
            )
            user.save()
            user = auth.authenticate(username=username, password=password)
            if not user:
                return redirect(\"/user/login\")
            else:
                auth.login(request, user)
                profile = Profile.objects.create(user=user)
                profile.save()
                request.session[\"error\"] = \"Usuario registrado!\"
                return redirect(\"/\")
        except:
            return redirect(\"/user/register\")


def login(request):
    if request.method == \"GET\":
        if request.user.is_authenticated:
            return redirect(\"/\")
        return render(request, \"login.html\")
    elif request.method == \"POST\":
        username = request.POST.get(\"username\")
        password = request.POST.get(\"password\")
        user = auth.authenticate(username=username, password=password)
        if not user:
            return redirect(\"/user/login\")
        else:
            auth.login(request, user)
            return redirect(\"/\")


def logout(request):
    auth.logout(request)
    return redirect(\"/user/login\")


@login_required(login_url=\"/user/login\")
def profile(request):
    if request.method == \"POST\":
        user_form = UpdateUserForm(request.POST, instance=request.user)
        profile_form = UpdateProfileForm(request.POST, instance=request.user.profile)

        if user_form.is_valid() and profile_form.is_valid():
            user_form.save()
            profile_form.save()
            request.session[\"message\"] = \"Perfil atualizado com sucesso!\"
            return redirect(to='profile')
    else:
        user_form = UpdateUserForm(instance=request.user)
        profile_form = UpdateProfileForm(instance=request.user.profile)
        #user = Profile.objects.get(user=request.user)
        #return render(request, \"profile.html\")
    return render(request, 'profile.html', {'user_form': user_form, 'profile_form': profile_form})
" 0 4 (face font-lock-keyword-face fontified t) 4 36 (fontified t) 36 42 (face font-lock-keyword-face fontified t) 42 58 (fontified t) 58 62 (face font-lock-keyword-face fontified t) 62 80 (fontified t) 80 86 (face font-lock-keyword-face fontified t) 86 104 (fontified t) 104 108 (face font-lock-keyword-face fontified t) 108 136 (fontified t) 136 142 (face font-lock-keyword-face fontified t) 142 148 (fontified t) 148 152 (face font-lock-keyword-face fontified t) 152 165 (fontified t) 165 171 (face font-lock-keyword-face fontified t) 171 180 (fontified t) 180 184 (face font-lock-keyword-face fontified t) 184 200 (fontified t) 200 206 (face font-lock-keyword-face fontified t) 206 211 (fontified t) 211 212 (fontified t) 212 216 (face font-lock-keyword-face fontified t) 216 218 (fontified t) 218 224 (fontified t) 224 230 (face font-lock-keyword-face fontified t) 230 231 (fontified t) 231 288 (fontified t) 288 289 (rear-nonsticky t fontified t) 289 290 (fontified t) 290 291 (fontified t) 291 293 (face font-lock-comment-delimiter-face fontified t) 293 317 (face font-lock-comment-face fontified t) 317 320 (face font-lock-keyword-face fontified t) 320 321 (fontified t) 321 329 (face font-lock-function-name-face fontified t) 329 330 (face (rainbow-delimiters-depth-1-face) fontified t) 330 337 (fontified t) 337 338 (face (rainbow-delimiters-depth-1-face) fontified t) 338 352 (fontified t) 352 359 (face font-lock-variable-name-face fontified t) 359 360 (face (rainbow-delimiters-depth-1-face) fontified t) 360 367 (face font-lock-string-face fontified t) 367 368 (face (rainbow-delimiters-depth-1-face) fontified t) 368 371 (fontified t) 371 373 (face font-lock-string-face fontified t) 373 378 (fontified t) 378 380 (face font-lock-keyword-face fontified t) 380 399 (fontified t) 399 404 (face font-lock-string-face fontified t) 404 414 (fontified t) 414 416 (face font-lock-keyword-face fontified t) 416 460 (fontified t) 460 466 (face font-lock-keyword-face fontified t) 466 475 (fontified t) 475 476 (face (rainbow-delimiters-depth-1-face) fontified t) 476 479 (face font-lock-string-face fontified t) 479 480 (face (rainbow-delimiters-depth-1-face) fontified t) 480 489 (fontified t) 489 495 (face font-lock-keyword-face fontified t) 495 502 (fontified t) 502 503 (face (rainbow-delimiters-depth-1-face) fontified t) 503 512 (fontified t) 512 527 (face font-lock-string-face fontified t) 527 528 (face (rainbow-delimiters-depth-1-face) fontified t) 528 533 (fontified t) 533 537 (face font-lock-keyword-face fontified t) 537 556 (fontified t) 556 562 (face font-lock-string-face fontified t) 562 599 (fontified t) 599 600 (face (rainbow-delimiters-depth-1-face) fontified t) 600 610 (face font-lock-string-face fontified t) 610 611 (face (rainbow-delimiters-depth-1-face) fontified t) 611 644 (fontified t) 644 645 (face (rainbow-delimiters-depth-1-face) fontified t) 645 652 (face font-lock-string-face fontified t) 652 653 (face (rainbow-delimiters-depth-1-face) fontified t) 653 689 (fontified t) 689 690 (face (rainbow-delimiters-depth-1-face) fontified t) 690 700 (face font-lock-string-face fontified t) 700 701 (face (rainbow-delimiters-depth-1-face) fontified t) 701 710 (fontified t) 710 712 (face font-lock-keyword-face fontified t) 712 713 (fontified t) 713 714 (face (rainbow-delimiters-depth-1-face) fontified t) 714 727 (fontified t) 727 730 (face font-lock-builtin-face fontified t) 730 731 (face (rainbow-delimiters-depth-2-face) fontified t) 731 745 (fontified t) 745 746 (face (rainbow-delimiters-depth-3-face) fontified t) 746 747 (face (rainbow-delimiters-depth-3-face) fontified t) 747 748 (face (rainbow-delimiters-depth-2-face) fontified t) 748 766 (fontified t) 766 768 (face font-lock-keyword-face fontified t) 768 769 (fontified t) 769 772 (face font-lock-builtin-face fontified t) 772 773 (face (rainbow-delimiters-depth-2-face) fontified t) 773 784 (fontified t) 784 785 (face (rainbow-delimiters-depth-3-face) fontified t) 785 786 (face (rainbow-delimiters-depth-3-face) fontified t) 786 787 (face (rainbow-delimiters-depth-2-face) fontified t) 787 805 (fontified t) 805 807 (face font-lock-keyword-face fontified t) 807 808 (fontified t) 808 811 (face font-lock-builtin-face fontified t) 811 812 (face (rainbow-delimiters-depth-2-face) fontified t) 812 826 (fontified t) 826 827 (face (rainbow-delimiters-depth-3-face) fontified t) 827 828 (face (rainbow-delimiters-depth-3-face) fontified t) 828 829 (face (rainbow-delimiters-depth-2-face) fontified t) 829 843 (fontified t) 843 844 (face (rainbow-delimiters-depth-1-face) fontified t) 844 873 (fontified t) 873 874 (face (rainbow-delimiters-depth-1-face) fontified t) 874 881 (face font-lock-string-face fontified t) 881 882 (face (rainbow-delimiters-depth-1-face) fontified t) 882 885 (fontified t) 885 928 (face font-lock-string-face fontified t) 928 941 (fontified t) 941 947 (face font-lock-keyword-face fontified t) 947 956 (fontified t) 956 957 (face (rainbow-delimiters-depth-1-face) fontified t) 957 973 (face font-lock-string-face fontified t) 973 974 (face (rainbow-delimiters-depth-1-face) fontified t) 974 1003 (fontified t) 1003 1009 (face font-lock-builtin-face fontified t) 1009 1010 (face (rainbow-delimiters-depth-1-face) fontified t) 1010 1027 (fontified t) 1027 1028 (face (rainbow-delimiters-depth-1-face) fontified t) 1028 1037 (fontified t) 1037 1039 (face font-lock-keyword-face fontified t) 1039 1051 (fontified t) 1051 1052 (face (rainbow-delimiters-depth-1-face) fontified t) 1052 1053 (face (rainbow-delimiters-depth-1-face) fontified t) 1053 1082 (fontified t) 1082 1083 (face (rainbow-delimiters-depth-1-face) fontified t) 1083 1090 (face font-lock-string-face fontified t) 1090 1091 (face (rainbow-delimiters-depth-1-face) fontified t) 1091 1094 (fontified t) 1094 1114 (face font-lock-string-face fontified t) 1114 1127 (fontified t) 1127 1133 (face font-lock-keyword-face fontified t) 1133 1142 (fontified t) 1142 1143 (face (rainbow-delimiters-depth-1-face) fontified t) 1143 1159 (face font-lock-string-face fontified t) 1159 1160 (face (rainbow-delimiters-depth-1-face) fontified t) 1160 1169 (fontified t) 1169 1172 (face font-lock-keyword-face fontified t) 1172 1217 (fontified t) 1217 1218 (face (rainbow-delimiters-depth-1-face) fontified t) 1218 1297 (fontified t) 1297 1298 (face (rainbow-delimiters-depth-1-face) fontified t) 1298 1299 (fontified t) 1299 1320 (fontified t) 1320 1321 (face (rainbow-delimiters-depth-1-face) fontified t) 1321 1322 (face (rainbow-delimiters-depth-1-face) fontified t) 1322 1323 (fontified t) 1323 1335 (fontified t) 1335 1339 (fontified t) 1339 1359 (fontified t) 1359 1360 (face (rainbow-delimiters-depth-1-face) fontified t) 1360 1379 (fontified t) 1379 1388 (fontified t) 1388 1396 (fontified t) 1396 1397 (face (rainbow-delimiters-depth-1-face) fontified t) 1397 1398 (fontified t) 1398 1410 (fontified t) 1410 1412 (face font-lock-keyword-face fontified t) 1412 1413 (fontified t) 1413 1416 (face font-lock-keyword-face fontified t) 1416 1423 (fontified t) 1423 1439 (fontified t) 1439 1445 (face font-lock-keyword-face fontified t) 1445 1454 (fontified t) 1454 1455 (face (rainbow-delimiters-depth-1-face) fontified t) 1455 1468 (face font-lock-string-face fontified t) 1468 1469 (face (rainbow-delimiters-depth-1-face) fontified t) 1469 1470 (fontified t) 1470 1482 (fontified t) 1482 1486 (face font-lock-keyword-face fontified t) 1486 1488 (fontified t) 1488 1514 (fontified t) 1514 1515 (face (rainbow-delimiters-depth-1-face) fontified t) 1515 1528 (fontified t) 1528 1529 (face (rainbow-delimiters-depth-1-face) fontified t) 1529 1530 (fontified t) 1530 1546 (fontified t) 1546 1553 (fontified t) 1553 1578 (fontified t) 1578 1579 (face (rainbow-delimiters-depth-1-face) fontified t) 1579 1583 (fontified t) 1583 1588 (fontified t) 1588 1589 (face (rainbow-delimiters-depth-1-face) fontified t) 1589 1590 (fontified t) 1590 1606 (fontified t) 1606 1618 (fontified t) 1618 1619 (face (rainbow-delimiters-depth-1-face) fontified t) 1619 1620 (face (rainbow-delimiters-depth-1-face) fontified t) 1620 1621 (fontified t) 1621 1637 (fontified t) 1637 1645 (fontified t) 1645 1652 (fontified t) 1652 1653 (face (rainbow-delimiters-depth-1-face) fontified t) 1653 1660 (face font-lock-string-face fontified t) 1660 1661 (face (rainbow-delimiters-depth-1-face) fontified t) 1661 1664 (fontified t) 1664 1685 (face font-lock-string-face fontified t) 1685 1686 (fontified t) 1686 1702 (fontified t) 1702 1708 (face font-lock-keyword-face fontified t) 1708 1717 (fontified t) 1717 1718 (face (rainbow-delimiters-depth-1-face) fontified t) 1718 1721 (face font-lock-string-face fontified t) 1721 1722 (face (rainbow-delimiters-depth-1-face) fontified t) 1722 1723 (fontified t) 1723 1731 (fontified t) 1731 1737 (face font-lock-keyword-face fontified t) 1737 1738 (fontified t) 1738 1739 (fontified t) 1739 1751 (fontified t) 1751 1757 (face font-lock-keyword-face fontified t) 1757 1766 (fontified t) 1766 1767 (face (rainbow-delimiters-depth-1-face) fontified t) 1767 1783 (face font-lock-string-face fontified t) 1783 1784 (face (rainbow-delimiters-depth-1-face) fontified t) 1784 1785 (fontified t) 1785 1787 (fontified t) 1787 1790 (face font-lock-keyword-face fontified t) 1790 1791 (fontified t) 1791 1796 (fontified t face font-lock-function-name-face) 1796 1797 (fontified t face (rainbow-delimiters-depth-1-face)) 1797 1804 (fontified t) 1804 1805 (fontified t face (rainbow-delimiters-depth-1-face)) 1805 1807 (fontified t) 1807 1811 (fontified t) 1811 1813 (face font-lock-keyword-face fontified t) 1813 1832 (fontified t) 1832 1837 (face font-lock-string-face fontified t) 1837 1847 (fontified t) 1847 1849 (face font-lock-keyword-face fontified t) 1849 1893 (fontified t) 1893 1899 (face font-lock-keyword-face fontified t) 1899 1908 (fontified t) 1908 1909 (face (rainbow-delimiters-depth-1-face) fontified t) 1909 1912 (face font-lock-string-face fontified t) 1912 1913 (face (rainbow-delimiters-depth-1-face) fontified t) 1913 1922 (fontified t) 1922 1928 (face font-lock-keyword-face fontified t) 1928 1935 (fontified t) 1935 1936 (face (rainbow-delimiters-depth-1-face) fontified t) 1936 1945 (fontified t) 1945 1957 (face font-lock-string-face fontified t) 1957 1958 (face (rainbow-delimiters-depth-1-face) fontified t) 1958 1963 (fontified t) 1963 1967 (face font-lock-keyword-face fontified t) 1967 1986 (fontified t) 1986 1992 (face font-lock-string-face fontified t) 1992 2029 (fontified t) 2029 2030 (face (rainbow-delimiters-depth-1-face) fontified t) 2030 2040 (face font-lock-string-face fontified t) 2040 2041 (face (rainbow-delimiters-depth-1-face) fontified t) 2041 2077 (fontified t) 2077 2078 (face (rainbow-delimiters-depth-1-face) fontified t) 2078 2088 (face font-lock-string-face fontified t) 2088 2089 (face (rainbow-delimiters-depth-1-face) fontified t) 2089 2122 (fontified t) 2122 2123 (face (rainbow-delimiters-depth-1-face) fontified t) 2123 2159 (fontified t) 2159 2160 (face (rainbow-delimiters-depth-1-face) fontified t) 2160 2169 (fontified t) 2169 2171 (face font-lock-keyword-face fontified t) 2171 2172 (fontified t) 2172 2175 (face font-lock-keyword-face fontified t) 2175 2194 (fontified t) 2194 2200 (face font-lock-keyword-face fontified t) 2200 2209 (fontified t) 2209 2210 (face (rainbow-delimiters-depth-1-face) fontified t) 2210 2223 (face font-lock-string-face fontified t) 2223 2224 (face (rainbow-delimiters-depth-1-face) fontified t) 2224 2233 (fontified t) 2233 2237 (face font-lock-keyword-face fontified t) 2237 2261 (fontified t) 2261 2262 (face (rainbow-delimiters-depth-1-face) fontified t) 2262 2275 (fontified t) 2275 2276 (face (rainbow-delimiters-depth-1-face) fontified t) 2276 2289 (fontified t) 2289 2295 (face font-lock-keyword-face fontified t) 2295 2304 (fontified t) 2304 2305 (face (rainbow-delimiters-depth-1-face) fontified t) 2305 2308 (face font-lock-string-face fontified t) 2308 2309 (face (rainbow-delimiters-depth-1-face) fontified t) 2309 2312 (fontified t) 2312 2315 (face font-lock-keyword-face fontified t) 2315 2316 (fontified t) 2316 2322 (face font-lock-function-name-face fontified t) 2322 2323 (face (rainbow-delimiters-depth-1-face) fontified t) 2323 2330 (fontified t) 2330 2331 (face (rainbow-delimiters-depth-1-face) fontified t) 2331 2348 (fontified t) 2348 2349 (face (rainbow-delimiters-depth-1-face) fontified t) 2349 2356 (fontified t) 2356 2357 (face (rainbow-delimiters-depth-1-face) fontified t) 2357 2362 (fontified t) 2362 2368 (face font-lock-keyword-face fontified t) 2368 2377 (fontified t) 2377 2378 (face (rainbow-delimiters-depth-1-face) fontified t) 2378 2391 (face font-lock-string-face fontified t) 2391 2392 (face (rainbow-delimiters-depth-1-face) fontified t) 2392 2395 (fontified t) 2395 2410 (face font-lock-type-face fontified t) 2410 2411 (face (rainbow-delimiters-depth-1-face) fontified t) 2411 2421 (fontified t) 2421 2434 (face font-lock-string-face fontified t) 2434 2435 (face (rainbow-delimiters-depth-1-face) fontified t) 2435 2436 (fontified t) 2436 2439 (face font-lock-keyword-face fontified t) 2439 2440 (fontified t) 2440 2447 (face font-lock-function-name-face fontified t) 2447 2448 (face (rainbow-delimiters-depth-1-face) fontified t) 2448 2455 (fontified t) 2455 2456 (face (rainbow-delimiters-depth-1-face) fontified t) 2456 2457 (fontified t) 2457 2458 (fontified t) 2458 2462 (fontified t) 2462 2464 (face font-lock-keyword-face fontified t) 2464 2473 (fontified t) 2473 2479 (fontified t) 2479 2483 (fontified t) 2483 2489 (face font-lock-string-face fontified t) 2489 2491 (fontified t) 2491 2499 (fontified t) 2499 2508 (face font-lock-variable-name-face fontified t) 2508 2511 (fontified t) 2511 2525 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2525 2526 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2526 2540 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2540 2561 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2561 2562 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2562 2563 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2563 2571 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2571 2583 (face font-lock-variable-name-face fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2583 2586 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2586 2603 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2603 2604 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2604 2618 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2618 2647 (fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2647 2648 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 6 0 1 1 2 2 3 3 4 4 5 5 6)) 2648 2649 (fontified t) 2649 2650 (fontified t) 2650 2658 (fontified t) 2658 2660 (face font-lock-keyword-face fontified t) 2660 2671 (fontified t) 2671 2679 (fontified t) 2679 2680 (face (rainbow-delimiters-depth-1-face) fontified t) 2680 2681 (face (rainbow-delimiters-depth-1-face) fontified t) 2681 2682 (fontified t) 2682 2685 (face font-lock-keyword-face fontified t) 2685 2699 (fontified t) 2699 2707 (fontified t) 2707 2708 (face (rainbow-delimiters-depth-1-face) fontified t) 2708 2709 (face (rainbow-delimiters-depth-1-face) fontified t) 2709 2711 (fontified t) 2711 2737 (fontified t) 2737 2738 (face (rainbow-delimiters-depth-1-face) fontified t) 2738 2739 (face (rainbow-delimiters-depth-1-face) fontified t) 2739 2740 (fontified t) 2740 2752 (fontified t) 2752 2769 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 2769 2770 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 2770 2771 (face (rainbow-delimiters-depth-1-face) fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 2771 2772 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 2772 2784 (fontified t match-data (0 7 0 1 1 2 2 3 3 4 4 5 5 6 6 7)) 2784 2792 (fontified t) 2792 2799 (face font-lock-variable-name-face fontified t) 2799 2800 (face (rainbow-delimiters-depth-1-face) fontified t) 2800 2809 (face font-lock-string-face fontified t) 2809 2810 (face (rainbow-delimiters-depth-1-face) fontified t) 2810 2813 (fontified t) 2813 2844 (face font-lock-string-face fontified t) 2844 2845 (face font-lock-string-face rear-nonsticky t fontified t) 2845 2846 (fontified t) 2846 2858 (fontified t) 2858 2864 (face font-lock-keyword-face fontified t) 2864 2873 (fontified t) 2873 2874 (face (rainbow-delimiters-depth-1-face) fontified t) 2874 2877 (fontified t) 2877 2886 (face font-lock-string-face fontified t) 2886 2887 (face (rainbow-delimiters-depth-1-face) fontified t) 2887 2888 (fontified t) 2888 2892 (fontified t) 2892 2896 (face font-lock-keyword-face fontified t) 2896 2897 (fontified t) 2897 2898 (fontified t) 2898 2906 (fontified t) 2906 2915 (face font-lock-variable-name-face fontified t) 2915 2932 (fontified t) 2932 2933 (face (rainbow-delimiters-depth-1-face) fontified t) 2933 2954 (fontified t) 2954 2955 (face (rainbow-delimiters-depth-1-face) fontified t) 2955 2956 (fontified t) 2956 2964 (fontified t) 2964 2976 (face font-lock-variable-name-face fontified t) 2976 2996 (fontified t) 2996 2997 (face (rainbow-delimiters-depth-1-face) fontified t) 2997 3026 (fontified t) 3026 3027 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 3027 3028 (fontified t) 3028 3036 (fontified t) 3036 3037 (face font-lock-comment-delimiter-face fontified t) 3037 3041 (face font-lock-comment-face fontified t) 3041 3063 (face font-lock-comment-face fontified t) 3063 3064 (face font-lock-comment-face fontified t) 3064 3068 (face font-lock-comment-face fontified t) 3068 3081 (face font-lock-comment-face fontified t) 3081 3082 (face font-lock-comment-face fontified t) 3082 3083 (face font-lock-comment-face fontified t) 3083 3091 (fontified t) 3091 3092 (face font-lock-comment-delimiter-face fontified t) 3092 3098 (face font-lock-comment-face fontified t) 3098 3105 (face font-lock-comment-face fontified t) 3105 3106 (face font-lock-comment-face fontified t) 3106 3115 (face font-lock-comment-face fontified t) 3115 3129 (face font-lock-comment-face fontified t) 3129 3130 (face font-lock-comment-face fontified t) 3130 3131 (face font-lock-comment-face fontified t) 3131 3135 (fontified t) 3135 3141 (face font-lock-keyword-face fontified t) 3141 3148 (fontified t) 3148 3149 (face (rainbow-delimiters-depth-1-face) fontified t) 3149 3158 (fontified t) 3158 3172 (face font-lock-string-face fontified t) 3172 3174 (fontified t) 3174 3175 (face (rainbow-delimiters-depth-2-face) fontified t) 3175 3186 (face font-lock-string-face fontified t) 3186 3199 (fontified t) 3199 3213 (face font-lock-string-face fontified t) 3213 3227 (fontified t) 3227 3228 (face (rainbow-delimiters-depth-2-face) fontified t) 3228 3229 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t) 3229 3230 (fontified t)) . -1) (undo-tree-id569 . -3230) (undo-tree-id570 . -2393) (undo-tree-id571 . -3228) (undo-tree-id572 . 1) (undo-tree-id573 . -3035) (undo-tree-id574 . 152) (undo-tree-id575 . -3035) (undo-tree-id576 . -3077) (undo-tree-id577 . -1530) (undo-tree-id578 . -1806) (undo-tree-id579 . -2393) (undo-tree-id580 . -2393) (undo-tree-id581 . -2393) (undo-tree-id582 . -3129) (undo-tree-id583 . -3129) (undo-tree-id584 . -3129) (undo-tree-id585 . -211) (undo-tree-id586 . -231) (undo-tree-id587 . -3135) (undo-tree-id588 . -3228) (undo-tree-id589 . -1685) (undo-tree-id590 . -2457) (undo-tree-id591 . -2771) (undo-tree-id592 . -2784) (undo-tree-id593 . -1685) (undo-tree-id594 . -2784) (undo-tree-id595 . -2877) (undo-tree-id596 . 345) (undo-tree-id597 . -2897) (undo-tree-id598 . -2898) (undo-tree-id599 . -2898) (undo-tree-id600 . -217) (undo-tree-id601 . -223) (undo-tree-id602 . -231) (undo-tree-id603 . -243) (undo-tree-id604 . -245) (undo-tree-id605 . -254) (undo-tree-id606 . -1564) (undo-tree-id607 . -1571) (undo-tree-id608 . -3135) (undo-tree-id609 . -3228) (undo-tree-id610 . -3228) (undo-tree-id611 . -3228) (undo-tree-id612 . -3230) (undo-tree-id613 . -3230) (undo-tree-id614 . -3230) (undo-tree-id615 . -3230) (undo-tree-id616 . -3230) (undo-tree-id617 . -2393) (undo-tree-id618 . -3230) (undo-tree-id619 . -3230) (t 25283 24991 440717 81000)) nil (25283 25766 310689 294000) 0 nil])
([nil nil ((2618 . 2633) (t 25283 25766 320727 139000)) nil (25283 26436 572773 566000) 0 nil])
([nil nil ((#("            return redirect(\"/\")
" 0 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t) 28 31 (face font-lock-string-face fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 33 (fontified t)) . 2278) (undo-tree-id639 . -30) (undo-tree-id640 . -33) (t 25283 26436 580735 840000)) nil (25283 48320 341760 216000) 0 nil])
([nil nil ((2277 . 2290) (#("
" 0 1 (fontified t)) . -2277) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) 2278) nil (25283 48320 341740 536000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2302 . 2303) (#("
" 0 1 (fontified nil)) . -2323) (2290 . 2324) 2289) nil (25283 48320 341715 570000) 0 nil])
([nil nil ((#("            return redirect(\"/\")
" 0 11 (fontified t) 11 12 (rear-nonsticky t fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t) 28 31 (face font-lock-string-face fontified t) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t) 32 33 (fontified t)) . 2291) (undo-tree-id630 . -32) (undo-tree-id631 . 1) (undo-tree-id632 . -32) (undo-tree-id633 . -33) (undo-tree-id634 . -12) (undo-tree-id635 . -33) 2303) nil (25283 48320 341705 335000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2290) (undo-tree-id625 . -1) (undo-tree-id626 . -1) 2291 (#("    " 0 4 (fontified t)) . -2291) (undo-tree-id627 . -4) 2295 (#("    " 0 4 (fontified t)) . -2295) (undo-tree-id628 . -4) 2299 (#("    " 0 4 (fontified t)) . -2299) (undo-tree-id629 . -4) 2303 (2290 . 2303) 2278) nil (25283 48320 341660 853000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2341 . 2342) (nil fontified nil 2290 . 2342) (2290 . 2342) 2289) nil (25283 48320 341617 624000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2306) (undo-tree-id620 . -1) (#("e" 0 1 (fontified t)) . -2307) (undo-tree-id621 . -1) (#("l" 0 1 (fontified t)) . -2308) (undo-tree-id622 . -1) (#("f" 0 1 (fontified t)) . -2309) (undo-tree-id623 . -1) (#("." 0 1 (fontified t)) . -2310) (undo-tree-id624 . -1) 2311) nil (25283 48320 341594 873000) 0 nil])
([nil nil ((2337 . 2338) (t 25283 48320 351019 901000)) nil (25283 48368 280101 306000) 0 nil])
([nil nil ((1893 . 1902) (#("r" 0 1 (fontified t)) . -1893) (undo-tree-id0 . -1) (#("e" 0 1 (fontified t)) . -1894) (undo-tree-id1 . -1) 1895 (#("q" 0 1 (fontified t)) . -1895) (undo-tree-id2 . -1) (#("u" 0 1 (fontified nil)) . -1896) (undo-tree-id3 . -1) (#("e" 0 1 (fontified t)) . -1897) (undo-tree-id4 . -1) (#("s" 0 1 (fontified t)) . -1898) (undo-tree-id5 . -1) (#("t" 0 1 (fontified t)) . -1899) (undo-tree-id6 . -1) (#("." 0 1 (fontified t)) . -1900) (undo-tree-id7 . -1) (#("G" 0 1 (fontified t)) . -1901) (undo-tree-id8 . -1) (#("E" 0 1 (fontified t)) . -1902) (undo-tree-id9 . -1) (#("T" 0 1 (fontified t)) . -1903) (undo-tree-id10 . -1) (#("." 0 1 (fontified t)) . -1904) (undo-tree-id11 . -1) (#("g" 0 1 (fontified t)) . -1905) (undo-tree-id12 . -1) (#("e" 0 1 (fontified t)) . -1906) (undo-tree-id13 . -1) (#("t" 0 1 (fontified t)) . -1907) (undo-tree-id14 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -1908) (undo-tree-id15 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1909) (undo-tree-id16 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1910) (undo-tree-id17 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1911) (undo-tree-id18 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -1912) (undo-tree-id19 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1913) (undo-tree-id20 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1914) (undo-tree-id21 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -1915) (undo-tree-id22 . -1) (undo-tree-id23 . 1) (undo-tree-id24 . -1) 1916 (1880 . 1881) (1870 . 1880) (#("G" 0 1 (fontified t)) . -1870) (undo-tree-id25 . -1) (#("e" 0 1 (fontified t)) . -1871) (undo-tree-id26 . -1) (#("t" 0 1 (fontified t)) . -1872) (undo-tree-id27 . -1) 1873 (1857 . 1873) (#("=" 0 1 (fontified t)) . -1857) (undo-tree-id28 . -1) 1858 (1848 . 1858) (1839 . 1848) (1916 . 1921) (1912 . 1916) (#("r" 0 1 (fontified t)) . -1912) (undo-tree-id29 . -1) (#("e" 0 1 (fontified t)) . -1913) (undo-tree-id30 . -1) (#("q" 0 1 (fontified t)) . -1914) (undo-tree-id31 . -1) (#("u" 0 1 (fontified t)) . -1915) (undo-tree-id32 . -1) (#("e" 0 1 (fontified t)) . -1916) (undo-tree-id33 . -1) (#("s" 0 1 (fontified t)) . -1917) (undo-tree-id34 . -1) (#("t" 0 1 (fontified t)) . -1918) (undo-tree-id35 . -1) (#("." 0 1 (fontified t)) . -1919) (undo-tree-id36 . -1) (#("G" 0 1 (fontified t)) . -1920) (undo-tree-id37 . -1) (#("E" 0 1 (fontified t)) . -1921) (undo-tree-id38 . -1) (#("T" 0 1 (fontified t)) . -1922) (undo-tree-id39 . -1) (#("." 0 1 (fontified t)) . -1923) (undo-tree-id40 . -1) (#("g" 0 1 (fontified t)) . -1924) (undo-tree-id41 . -1) (#("e" 0 1 (fontified t)) . -1925) (undo-tree-id42 . -1) (#("t" 0 1 (fontified t)) . -1926) (undo-tree-id43 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -1927) (undo-tree-id44 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1928) (undo-tree-id45 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1929) (undo-tree-id46 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1930) (undo-tree-id47 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -1931) (undo-tree-id48 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1932) (undo-tree-id49 . -1) 1933 (1920 . 1933) (#("g" 0 1 (fontified t)) . -1920) (undo-tree-id50 . -1) 1921 (1912 . 1921) (1909 . 1912) (1888 . 1909) (1875 . 1888) (1873 . 1875) (1863 . 1873) (#("n" 0 1 (fontified t)) . -1863) (undo-tree-id51 . -1) 1864 (1859 . 1864) (#("g" 0 1 (fontified t)) . -1859) (undo-tree-id52 . -1) 1860 (1848 . 1860) (1839 . 1848) (t 25283 48368 291020 523000) 1838) nil (25286 591 652666 665000) 0 nil])
([nil nil ((1757 . 1768) (#("r" 0 1 (fontified t)) . -1757) (undo-tree-id53 . -1) (#("e" 0 1 (fontified nil)) . -1758) (undo-tree-id54 . -1) (#("q" 0 1 (fontified nil)) . -1759) (undo-tree-id55 . -1) (#("u" 0 1 (fontified t)) . -1760) (undo-tree-id56 . -1) (#("e" 0 1 (fontified t)) . -1761) (undo-tree-id57 . -1) (#("s" 0 1 (fontified t)) . -1762) (undo-tree-id58 . -1) (#("t" 0 1 (fontified t)) . -1763) (undo-tree-id59 . -1) (#("." 0 1 (fontified t)) . -1764) (undo-tree-id60 . -1) (#("s" 0 1 (fontified t)) . -1765) (undo-tree-id61 . -1) (#("e" 0 1 (fontified t)) . -1766) (undo-tree-id62 . -1) (#("s" 0 1 (fontified t)) . -1767) (undo-tree-id63 . -1) (#("s" 0 1 (fontified t)) . -1768) (undo-tree-id64 . -1) (#("i" 0 1 (fontified t)) . -1769) (undo-tree-id65 . -1) (#("o" 0 1 (fontified t)) . -1770) (undo-tree-id66 . -1) (#("n" 0 1 (fontified t)) . -1771) (undo-tree-id67 . -1) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1772) (undo-tree-id68 . -1) 1773 (#("'" 0 1 (fontified t face font-lock-string-face)) . -1773) (undo-tree-id69 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1774) (undo-tree-id70 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1775) (undo-tree-id71 . -1) (undo-tree-id72 . 1) (undo-tree-id73 . -1) 1776 (1773 . 1775) (1772 . 1774) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1772) (undo-tree-id74 . -1) 1773 (1772 . 1773) (#("." 0 1 (fontified t)) . -1772) (undo-tree-id75 . -1) (#("g" 0 1 (fontified t)) . -1773) (undo-tree-id76 . -1) (#("e" 0 1 (fontified t)) . -1774) (undo-tree-id77 . -1) (#("t" 0 1 (fontified t)) . -1775) (undo-tree-id78 . -1) 1776 (1768 . 1776) (1765 . 1768) (#("G" 0 1 (fontified t)) . -1765) (undo-tree-id79 . -1) (#("E" 0 1 (fontified t)) . -1766) (undo-tree-id80 . -1) (#("T" 0 1 (fontified t)) . -1767) (undo-tree-id81 . -1) (#("." 0 1 (fontified t)) . -1768) (undo-tree-id82 . -1) (#("g" 0 1 (fontified t)) . -1769) (undo-tree-id83 . -1) (#("e" 0 1 (fontified t)) . -1770) (undo-tree-id84 . -1) (#("t" 0 1 (fontified t)) . -1771) (undo-tree-id85 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1772) (undo-tree-id86 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1773) (undo-tree-id87 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1774) (undo-tree-id88 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1775) (undo-tree-id89 . -1) 1776 (1757 . 1776) (372 . 376) (371 . 373) (370 . 372) (#("." 0 1 (fontified t)) . -370) (undo-tree-id90 . -1) (#("g" 0 1 (fontified t)) . -371) (undo-tree-id91 . -1) (#("e" 0 1 (fontified t)) . -372) (undo-tree-id92 . -1) 373 (368 . 373) (347 . 368) (#("t" 0 1 (fontified t)) . -347) (undo-tree-id93 . -1) (#("x" 0 1 (fontified t)) . -348) (undo-tree-id94 . -1) 349 (345 . 349) (340 . 345) (t 25286 591 660745 155000) 339) nil (25286 656 917940 322000) 0 nil])
([nil nil ((#("request.GET.get('next'" 0 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-2-face)) 16 22 (fontified t face font-lock-string-face)) . 2465) (undo-tree-id128 . -21) (undo-tree-id129 . -21) (undo-tree-id130 . -21) (undo-tree-id131 . -21) (undo-tree-id132 . -21) (undo-tree-id133 . -21) (undo-tree-id134 . -21) (undo-tree-id135 . -21) (undo-tree-id136 . -21) (undo-tree-id137 . -21) (undo-tree-id138 . -21) (undo-tree-id139 . -21) (undo-tree-id140 . -21) (undo-tree-id141 . -21) (undo-tree-id142 . -21) (undo-tree-id143 . -21) (undo-tree-id144 . -21) (undo-tree-id145 . -21) (undo-tree-id146 . -21) (undo-tree-id147 . -21) (undo-tree-id148 . -21) (undo-tree-id149 . -21) (undo-tree-id150 . -21) (undo-tree-id151 . -21) (undo-tree-id152 . -21) (undo-tree-id153 . -21) (undo-tree-id154 . -21) (undo-tree-id155 . -21) (undo-tree-id156 . -21) (undo-tree-id157 . -21) (undo-tree-id158 . -21) (undo-tree-id159 . -21) (undo-tree-id160 . -21) (undo-tree-id161 . -21) (undo-tree-id162 . -21) (undo-tree-id163 . -21) (undo-tree-id164 . -21) (undo-tree-id165 . -21) (undo-tree-id166 . -21) (undo-tree-id167 . -21) (undo-tree-id168 . -21) (undo-tree-id169 . -21) (undo-tree-id170 . -21) (undo-tree-id171 . -21) (undo-tree-id172 . -21) (undo-tree-id173 . -21) (undo-tree-id174 . -21) (undo-tree-id175 . -21) (undo-tree-id176 . -21) (undo-tree-id177 . -21) (undo-tree-id178 . -21) (undo-tree-id179 . -21) (undo-tree-id180 . -21) (undo-tree-id181 . -21) (undo-tree-id182 . -21) (undo-tree-id183 . -21) (undo-tree-id184 . -21) (undo-tree-id185 . -21) (undo-tree-id186 . -21) (undo-tree-id187 . -21) (undo-tree-id188 . -21) (undo-tree-id189 . -21) (undo-tree-id190 . -21) (undo-tree-id191 . -21) (undo-tree-id192 . -21) (undo-tree-id193 . -21) (undo-tree-id194 . -21) (undo-tree-id195 . -21) (undo-tree-id196 . -21) (undo-tree-id197 . -21) (undo-tree-id198 . -21) (undo-tree-id199 . -21) (undo-tree-id200 . -21) (undo-tree-id201 . -21) (undo-tree-id202 . -22) (undo-tree-id203 . -21) (undo-tree-id204 . -21) (undo-tree-id205 . -21) (undo-tree-id206 . -21) (undo-tree-id207 . -21) (undo-tree-id208 . -21) (undo-tree-id209 . -21) (undo-tree-id210 . -21) (undo-tree-id211 . -21) (undo-tree-id212 . -21) (undo-tree-id213 . -21) (undo-tree-id214 . -21) (undo-tree-id215 . -21) (undo-tree-id216 . -21) (undo-tree-id217 . -21) (undo-tree-id218 . -21) (undo-tree-id219 . -21) (undo-tree-id220 . -21) (undo-tree-id221 . -21) (undo-tree-id222 . -21) (undo-tree-id223 . -21) (undo-tree-id224 . -21) (undo-tree-id225 . -21) (undo-tree-id226 . -20) (undo-tree-id227 . -20) (undo-tree-id228 . -20) (undo-tree-id229 . -20) (undo-tree-id230 . -20) (undo-tree-id231 . -20) (undo-tree-id232 . -20) (undo-tree-id233 . -20) (undo-tree-id234 . -20) (undo-tree-id235 . -20) (undo-tree-id236 . -20) (undo-tree-id237 . -20) (undo-tree-id238 . -20) (undo-tree-id239 . -20) (undo-tree-id240 . -20) (undo-tree-id241 . -20) (undo-tree-id242 . -20) (undo-tree-id243 . -20) (undo-tree-id244 . -20) (undo-tree-id245 . -20) (undo-tree-id246 . -20) (undo-tree-id247 . -20) (undo-tree-id248 . -20) (undo-tree-id249 . -20) (undo-tree-id250 . -20) (undo-tree-id251 . -20) (undo-tree-id252 . -20) (undo-tree-id253 . -20) (undo-tree-id254 . -20) (undo-tree-id255 . -20) (undo-tree-id256 . -20) (undo-tree-id257 . -20) (undo-tree-id258 . -20) (undo-tree-id259 . -20) (undo-tree-id260 . -20) (undo-tree-id261 . -20) (undo-tree-id262 . -19) (undo-tree-id263 . -19) (undo-tree-id264 . -19) (undo-tree-id265 . -19) (undo-tree-id266 . -19) (undo-tree-id267 . -19) (undo-tree-id268 . -19) (undo-tree-id269 . -19) (undo-tree-id270 . -18) (undo-tree-id271 . -18) (undo-tree-id272 . -18) (undo-tree-id273 . -18) (undo-tree-id274 . -18) (undo-tree-id275 . -18) (undo-tree-id276 . -18) (undo-tree-id277 . -18) (undo-tree-id278 . -17) (undo-tree-id279 . -17) (undo-tree-id280 . -17) (undo-tree-id281 . -17) (undo-tree-id282 . -17) (undo-tree-id283 . -17) (undo-tree-id284 . -17) (undo-tree-id285 . -17) (undo-tree-id286 . -16) (undo-tree-id287 . -16) (undo-tree-id288 . -16) (undo-tree-id289 . -16) (undo-tree-id290 . -16) (undo-tree-id291 . -16) (undo-tree-id292 . -16) (undo-tree-id293 . -16) (undo-tree-id294 . -15) (undo-tree-id295 . -15) (undo-tree-id296 . -15) (undo-tree-id297 . -15) (undo-tree-id298 . -15) (undo-tree-id299 . -15) (undo-tree-id300 . -15) (undo-tree-id301 . -15) (undo-tree-id302 . -14) (undo-tree-id303 . -14) (undo-tree-id304 . -14) (undo-tree-id305 . -14) (undo-tree-id306 . -14) (undo-tree-id307 . -14) (undo-tree-id308 . -14) (undo-tree-id309 . -14) (undo-tree-id310 . -13) (undo-tree-id311 . -13) (undo-tree-id312 . -13) (undo-tree-id313 . -13) (undo-tree-id314 . -13) (undo-tree-id315 . -13) (undo-tree-id316 . -13) (undo-tree-id317 . -13) (undo-tree-id318 . -12) (undo-tree-id319 . -12) (undo-tree-id320 . -12) (undo-tree-id321 . -12) (undo-tree-id322 . -12) (undo-tree-id323 . -12) (undo-tree-id324 . -12) (undo-tree-id325 . -12) (undo-tree-id326 . -11) (undo-tree-id327 . -11) (undo-tree-id328 . -11) (undo-tree-id329 . -11) (undo-tree-id330 . -11) (undo-tree-id331 . -11) (undo-tree-id332 . -11) (undo-tree-id333 . -11) (undo-tree-id334 . -10) (undo-tree-id335 . -10) (undo-tree-id336 . -10) (undo-tree-id337 . -10) (undo-tree-id338 . -10) (undo-tree-id339 . -10) (undo-tree-id340 . -10) (undo-tree-id341 . -10) (undo-tree-id342 . -9) (undo-tree-id343 . -9) (undo-tree-id344 . -9) (undo-tree-id345 . -9) (undo-tree-id346 . -9) (undo-tree-id347 . -9) (undo-tree-id348 . -9) (undo-tree-id349 . -9) (undo-tree-id350 . -8) (undo-tree-id351 . -8) (undo-tree-id352 . -8) (undo-tree-id353 . -8) (undo-tree-id354 . -8) (undo-tree-id355 . -8) (undo-tree-id356 . -8) (undo-tree-id357 . -8) (undo-tree-id358 . -7) (undo-tree-id359 . -7) (undo-tree-id360 . -7) (undo-tree-id361 . -7) (undo-tree-id362 . -7) (undo-tree-id363 . -7) (undo-tree-id364 . -7) (undo-tree-id365 . -7) (undo-tree-id366 . -6) (undo-tree-id367 . -6) (undo-tree-id368 . -6) (undo-tree-id369 . -6) (undo-tree-id370 . -6) (undo-tree-id371 . -6) (undo-tree-id372 . -6) (undo-tree-id373 . -6) (undo-tree-id374 . -5) (undo-tree-id375 . -5) (undo-tree-id376 . -5) (undo-tree-id377 . -5) (undo-tree-id378 . -5) (undo-tree-id379 . -5) (undo-tree-id380 . -5) (undo-tree-id381 . -5) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -4) (undo-tree-id388 . -4) (undo-tree-id389 . -4) (undo-tree-id390 . -3) (undo-tree-id391 . -3) (undo-tree-id392 . -3) (undo-tree-id393 . -3) (undo-tree-id394 . -3) (undo-tree-id395 . -3) (undo-tree-id396 . -3) (undo-tree-id397 . -3) (undo-tree-id398 . -2) (undo-tree-id399 . -2) (undo-tree-id400 . -2) (undo-tree-id401 . -2) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . -2) (undo-tree-id405 . -2) (undo-tree-id406 . -2) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) (undo-tree-id412 . -2) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (t 25286 656 920746 2000)) nil (25286 780 37387 527000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . -2483) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . 1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) 2484 (2465 . 2474)) nil (25286 780 35845 542000) 0 nil])
([nil nil ((1768 . 1774) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -1768) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -1769) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -1770) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) 1771 (t 25286 780 40747 600000)) nil (25286 807 323930 235000) 0 nil])
([nil nil ((381 . 382) (#("]" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -381) (undo-tree-id735 . -1) (undo-tree-id736 . 1) (undo-tree-id737 . -1) 382 (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 375) (undo-tree-id738 . 1) (undo-tree-id739 . -1) (undo-tree-id740 . 1) (370 . 375) (t 25286 807 330747 954000)) nil (25286 902 614583 799000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face font-lock-string-face)) . 1001) (#("r" 0 1 (fontified t face font-lock-string-face)) . 1001) (#("e" 0 1 (fontified t face font-lock-string-face)) . 1001) (#("s" 0 1 (fontified t face font-lock-string-face)) . 1001) (#("u" 0 1 (fontified t face font-lock-string-face)) . 1001) (#("/" 0 1 (fontified t face font-lock-string-face)) . 1001) (#("/" 0 1 (fontified t face font-lock-string-face)) . -1187) (undo-tree-id1776 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -1188) (undo-tree-id1777 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -1189) (undo-tree-id1778 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1190) (undo-tree-id1779 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -1191) (undo-tree-id1780 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -1192) (undo-tree-id1781 . -1) 1193 (1498 . 1507) (#("r" 0 1 (fontified t)) . -1498) (undo-tree-id1782 . -1) (#("e" 0 1 (fontified t)) . -1499) (undo-tree-id1783 . -1) 1500 (1498 . 1500) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -1498) (undo-tree-id1784 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -1499) (undo-tree-id1785 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -1500) (undo-tree-id1786 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -1501) (undo-tree-id1787 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1502) (undo-tree-id1788 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -1503) (undo-tree-id1789 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -1504) (undo-tree-id1790 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -1505) (undo-tree-id1791 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1506) (undo-tree-id1792 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -1507) (undo-tree-id1793 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -1508) (undo-tree-id1794 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1509) (undo-tree-id1795 . -1) 1510 (#("
" 0 1 (fontified t)) . -1465) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) 1466 (#("    " 0 4 (fontified t)) . -1466) (undo-tree-id1798 . -4) 1470 (#("    " 0 4 (fontified t)) . -1470) (undo-tree-id1799 . -4) 1474 (#("    " 0 4 (fontified t)) . -1474) (undo-tree-id1800 . -4) 1478 (#("    " 0 4 (fontified t)) . -1478) (undo-tree-id1801 . -4) 1482 (1465 . 1482) (1881 . 1882) (#("," 0 1 (fontified t)) . -1881) (undo-tree-id1802 . -1) 1882 (1878 . 1882) (1877 . 1878) (1856 . 1877) (1835 . 1856) (1830 . 1835) (1813 . 1830) (1775 . 1779) (1757 . 1758) (1748 . 1757) (#("nextR" 0 5 (fontified nil)) . -1748) (1748 . 1753) (#("nextRoute" 0 9 (fontified nil)) . -1748) (1748 . 1757) (#("nextR" 0 5 (fontified t)) . -1748) (undo-tree-id1803 . -5) 1753 (1745 . 1753) (1728 . 1745) (t 25286 902 620749 191000) 1716) nil (25286 21358 127729 897000) 0 nil])
([nil nil ((#("    nextRoute=request.session.get('next')
" 0 4 (fontified t) 4 13 (fontified t face font-lock-variable-name-face) 13 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 40 (fontified t face font-lock-string-face) 40 41 (fontified t face (rainbow-delimiters-depth-1-face)) 41 42 (fontified t)) . 341) (undo-tree-id1773 . -42) (undo-tree-id1774 . 42) (undo-tree-id1775 . -41)) nil (25286 21358 127521 414000) 0 nil])
([nil nil ((#("                if nextRoute:
" 0 16 (fontified t) 16 18 (fontified t face font-lock-keyword-face) 18 19 (fontified t) 19 29 (match-data (0 5 0 1 1 2 2 3 3 4 4 5) fontified t) 29 30 (fontified t)) . 1672) (undo-tree-id1770 . -30) (undo-tree-id1771 . -19) (undo-tree-id1772 . -28)) nil (25286 21358 127496 938000) 0 nil])
([nil nil ((#("                    return redirect(nextRoute, 'home')
" 0 20 (fontified t) 20 26 (fontified t face font-lock-keyword-face) 26 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 47 (fontified t) 47 53 (fontified t face font-lock-string-face) 53 54 (fontified t face (rainbow-delimiters-depth-1-face)) 54 55 (fontified t)) . 1672) (undo-tree-id1761 . -55) (undo-tree-id1762 . -47) (undo-tree-id1763 . -47) (undo-tree-id1764 . -47) (undo-tree-id1765 . -20) (undo-tree-id1766 . -20) (undo-tree-id1767 . -54) (undo-tree-id1768 . -19) (undo-tree-id1769 . -28)) nil (25286 21358 127473 333000) 0 nil])
([nil nil ((#("                else:
" 0 16 (fontified t) 16 20 (fontified t face font-lock-keyword-face) 20 21 (fontified t) 21 22 (fontified t)) . 1672) (undo-tree-id1757 . -22) (undo-tree-id1758 . -21) (undo-tree-id1759 . -19) (undo-tree-id1760 . -21)) nil (25286 21358 127409 657000) 0 nil])
([nil nil ((1709 . 1714) (#("j" 0 1 (fontified t face font-lock-string-face)) . -1709) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1710) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -1711) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) 1712 (1708 . 1712) (#("n" 0 1 (fontified t)) . -1708) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (#("e" 0 1 (fontified t)) . -1709) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (#("x" 0 1 (fontified t)) . -1710) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (#("t" 0 1 (fontified t face font-lock-builtin-face)) . -1711) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (#("R" 0 1 (fontified t)) . -1712) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (#("o" 0 1 (fontified t)) . -1713) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (#("u" 0 1 (fontified t)) . -1714) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (#("t" 0 1 (fontified t)) . -1715) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (#("e" 0 1 (fontified t)) . -1716) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) 1717) nil (25286 21358 127053 749000) 0 nil])
([nil nil ((1671 . 1688) (#("
" 0 1 (fontified t)) . -1671) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) 1672 (#("    " 0 4 (fontified t)) . -1672) (undo-tree-id1931 . -4) (undo-tree-id1932 . -4) (undo-tree-id1933 . -4) (undo-tree-id1934 . -4) (undo-tree-id1935 . -4) (undo-tree-id1936 . -4) (undo-tree-id1937 . -4) (undo-tree-id1938 . -4) (undo-tree-id1939 . -4) (undo-tree-id1940 . -4) (undo-tree-id1941 . -4) (undo-tree-id1942 . -4) (undo-tree-id1943 . -4) (undo-tree-id1944 . -4) (undo-tree-id1945 . -4) (undo-tree-id1946 . -4) (undo-tree-id1947 . -4) (undo-tree-id1948 . -4) (undo-tree-id1949 . -4) (undo-tree-id1950 . -4) (undo-tree-id1951 . -4) (undo-tree-id1952 . -4) (undo-tree-id1953 . -4) (undo-tree-id1954 . -4) (undo-tree-id1955 . -4) (undo-tree-id1956 . -4) (undo-tree-id1957 . -4) (undo-tree-id1958 . -4) (undo-tree-id1959 . -4) (undo-tree-id1960 . -4) (undo-tree-id1961 . -4) (undo-tree-id1962 . -4) (undo-tree-id1963 . -4) (undo-tree-id1964 . -4) (undo-tree-id1965 . -4) (undo-tree-id1966 . -4) (undo-tree-id1967 . -4) (undo-tree-id1968 . -4) (undo-tree-id1969 . -4) (undo-tree-id1970 . -4) (undo-tree-id1971 . -4) (undo-tree-id1972 . -4) (undo-tree-id1973 . -4) (undo-tree-id1974 . -4) (undo-tree-id1975 . -4) (undo-tree-id1976 . -4) (undo-tree-id1977 . -4) (undo-tree-id1978 . -4) (undo-tree-id1979 . -4) (undo-tree-id1980 . -4) (undo-tree-id1981 . -4) (undo-tree-id1982 . -4) (undo-tree-id1983 . -4) (undo-tree-id1984 . -4) (undo-tree-id1985 . -4) (undo-tree-id1986 . -4) (undo-tree-id1987 . -4) (undo-tree-id1988 . -4) (undo-tree-id1989 . -4) (undo-tree-id1990 . -4) (undo-tree-id1991 . -4) (undo-tree-id1992 . -4) (undo-tree-id1993 . -4) (undo-tree-id1994 . -4) (undo-tree-id1995 . -4) (undo-tree-id1996 . -4) (undo-tree-id1997 . -4) (undo-tree-id1998 . -4) (undo-tree-id1999 . -4) (undo-tree-id2000 . -4) (undo-tree-id2001 . -4) (undo-tree-id2002 . -4) (undo-tree-id2003 . -4) (undo-tree-id2004 . -4) (undo-tree-id2005 . -4) (undo-tree-id2006 . -4) (undo-tree-id2007 . -4) (undo-tree-id2008 . -4) (undo-tree-id2009 . -4) (undo-tree-id2010 . -4) (undo-tree-id2011 . -4) (undo-tree-id2012 . -4) (undo-tree-id2013 . -4) (undo-tree-id2014 . -4) (undo-tree-id2015 . -4) (undo-tree-id2016 . -4) (undo-tree-id2017 . -4) (undo-tree-id2018 . -4) (undo-tree-id2019 . -4) (undo-tree-id2020 . -4) (undo-tree-id2021 . -4) (undo-tree-id2022 . -4) (undo-tree-id2023 . -4) (undo-tree-id2024 . -4) (undo-tree-id2025 . -4) (undo-tree-id2026 . -4) (undo-tree-id2027 . -4) (undo-tree-id2028 . -4) (undo-tree-id2029 . -4) (undo-tree-id2030 . -4) (undo-tree-id2031 . -4) (undo-tree-id2032 . -4) (undo-tree-id2033 . -4) (undo-tree-id2034 . -4) (undo-tree-id2035 . -4) 1676 (#("    " 0 4 (fontified t)) . -1676) (undo-tree-id2036 . -4) (undo-tree-id2037 . -4) (undo-tree-id2038 . -4) (undo-tree-id2039 . -4) (undo-tree-id2040 . -4) (undo-tree-id2041 . -4) (undo-tree-id2042 . -4) (undo-tree-id2043 . -4) (undo-tree-id2044 . -4) (undo-tree-id2045 . -4) (undo-tree-id2046 . -4) (undo-tree-id2047 . -4) (undo-tree-id2048 . -4) (undo-tree-id2049 . -4) (undo-tree-id2050 . -4) (undo-tree-id2051 . -4) (undo-tree-id2052 . -4) (undo-tree-id2053 . -4) (undo-tree-id2054 . -4) (undo-tree-id2055 . -4) (undo-tree-id2056 . -4) (undo-tree-id2057 . -4) (undo-tree-id2058 . -4) (undo-tree-id2059 . -4) (undo-tree-id2060 . -4) (undo-tree-id2061 . -4) (undo-tree-id2062 . -4) (undo-tree-id2063 . -4) (undo-tree-id2064 . -4) (undo-tree-id2065 . -4) (undo-tree-id2066 . -4) (undo-tree-id2067 . -4) (undo-tree-id2068 . -4) (undo-tree-id2069 . -4) (undo-tree-id2070 . -4) (undo-tree-id2071 . -4) (undo-tree-id2072 . -4) (undo-tree-id2073 . -4) (undo-tree-id2074 . -4) (undo-tree-id2075 . -4) (undo-tree-id2076 . -4) (undo-tree-id2077 . -4) (undo-tree-id2078 . -4) (undo-tree-id2079 . -4) (undo-tree-id2080 . -4) (undo-tree-id2081 . -4) (undo-tree-id2082 . -4) (undo-tree-id2083 . -4) (undo-tree-id2084 . -4) (undo-tree-id2085 . -4) (undo-tree-id2086 . -4) (undo-tree-id2087 . -4) (undo-tree-id2088 . -4) (undo-tree-id2089 . -4) (undo-tree-id2090 . -4) (undo-tree-id2091 . -4) (undo-tree-id2092 . -4) (undo-tree-id2093 . -4) (undo-tree-id2094 . -4) (undo-tree-id2095 . -4) (undo-tree-id2096 . -4) (undo-tree-id2097 . -4) (undo-tree-id2098 . -4) (undo-tree-id2099 . -4) (undo-tree-id2100 . -4) (undo-tree-id2101 . -4) (undo-tree-id2102 . -4) (undo-tree-id2103 . -4) (undo-tree-id2104 . -4) (undo-tree-id2105 . -4) (undo-tree-id2106 . -4) (undo-tree-id2107 . -4) (undo-tree-id2108 . -4) (undo-tree-id2109 . -4) (undo-tree-id2110 . -4) (undo-tree-id2111 . -4) (undo-tree-id2112 . -4) (undo-tree-id2113 . -4) (undo-tree-id2114 . -4) (undo-tree-id2115 . -4) (undo-tree-id2116 . -4) (undo-tree-id2117 . -4) (undo-tree-id2118 . -4) (undo-tree-id2119 . -4) (undo-tree-id2120 . -4) (undo-tree-id2121 . -4) 1680 (#("    " 0 4 (fontified t)) . -1680) (undo-tree-id2122 . -4) (undo-tree-id2123 . -4) (undo-tree-id2124 . -4) (undo-tree-id2125 . -4) (undo-tree-id2126 . -4) (undo-tree-id2127 . -4) (undo-tree-id2128 . -4) (undo-tree-id2129 . -4) (undo-tree-id2130 . -4) (undo-tree-id2131 . -4) (undo-tree-id2132 . -4) (undo-tree-id2133 . -4) (undo-tree-id2134 . -4) (undo-tree-id2135 . -4) (undo-tree-id2136 . -4) (undo-tree-id2137 . -4) (undo-tree-id2138 . -4) (undo-tree-id2139 . -4) (undo-tree-id2140 . -4) (undo-tree-id2141 . -4) (undo-tree-id2142 . -4) (undo-tree-id2143 . -4) (undo-tree-id2144 . -4) (undo-tree-id2145 . -4) (undo-tree-id2146 . -4) (undo-tree-id2147 . -4) (undo-tree-id2148 . -4) (undo-tree-id2149 . -4) (undo-tree-id2150 . -4) (undo-tree-id2151 . -4) (undo-tree-id2152 . -4) (undo-tree-id2153 . -4) (undo-tree-id2154 . -4) (undo-tree-id2155 . -4) (undo-tree-id2156 . -4) (undo-tree-id2157 . -4) (undo-tree-id2158 . -4) (undo-tree-id2159 . -4) (undo-tree-id2160 . -4) (undo-tree-id2161 . -4) (undo-tree-id2162 . -4) (undo-tree-id2163 . -4) (undo-tree-id2164 . -4) (undo-tree-id2165 . -4) (undo-tree-id2166 . -4) (undo-tree-id2167 . -4) (undo-tree-id2168 . -4) (undo-tree-id2169 . -4) (undo-tree-id2170 . -4) (undo-tree-id2171 . -4) (undo-tree-id2172 . -4) (undo-tree-id2173 . -4) (undo-tree-id2174 . -4) (undo-tree-id2175 . -4) (undo-tree-id2176 . -4) (undo-tree-id2177 . -4) (undo-tree-id2178 . -4) (undo-tree-id2179 . -4) (undo-tree-id2180 . -4) (undo-tree-id2181 . -4) (undo-tree-id2182 . -4) (undo-tree-id2183 . -4) (undo-tree-id2184 . -4) (undo-tree-id2185 . -4) (undo-tree-id2186 . -4) (undo-tree-id2187 . -4) (undo-tree-id2188 . -4) (undo-tree-id2189 . -4) (undo-tree-id2190 . -4) (undo-tree-id2191 . -4) (undo-tree-id2192 . -4) (undo-tree-id2193 . -4) (undo-tree-id2194 . -4) (undo-tree-id2195 . -4) 1684 (#("    " 0 4 (fontified t)) . -1684) (undo-tree-id2196 . -4) (undo-tree-id2197 . -4) (undo-tree-id2198 . -4) (undo-tree-id2199 . -4) (undo-tree-id2200 . -4) (undo-tree-id2201 . -4) (undo-tree-id2202 . -4) (undo-tree-id2203 . -4) (undo-tree-id2204 . -4) (undo-tree-id2205 . -4) (undo-tree-id2206 . -4) (undo-tree-id2207 . -4) (undo-tree-id2208 . -4) (undo-tree-id2209 . -4) (undo-tree-id2210 . -4) (undo-tree-id2211 . -4) (undo-tree-id2212 . -4) (undo-tree-id2213 . -4) (undo-tree-id2214 . -4) (undo-tree-id2215 . -4) (undo-tree-id2216 . -4) (undo-tree-id2217 . -4) (undo-tree-id2218 . -4) (undo-tree-id2219 . -4) (undo-tree-id2220 . -4) (undo-tree-id2221 . -4) (undo-tree-id2222 . -4) (undo-tree-id2223 . -4) (undo-tree-id2224 . -4) (undo-tree-id2225 . -4) (undo-tree-id2226 . -4) (undo-tree-id2227 . -4) (undo-tree-id2228 . -4) (undo-tree-id2229 . -4) (undo-tree-id2230 . -4) (undo-tree-id2231 . -4) (undo-tree-id2232 . -4) (undo-tree-id2233 . -4) (undo-tree-id2234 . -4) (undo-tree-id2235 . -4) (undo-tree-id2236 . -4) (undo-tree-id2237 . -4) (undo-tree-id2238 . -4) (undo-tree-id2239 . -4) (undo-tree-id2240 . -4) (undo-tree-id2241 . -4) (undo-tree-id2242 . -4) (undo-tree-id2243 . -4) (undo-tree-id2244 . -4) (undo-tree-id2245 . -4) (undo-tree-id2246 . -4) (undo-tree-id2247 . -4) (undo-tree-id2248 . -4) (undo-tree-id2249 . -4) (undo-tree-id2250 . -4) 1688 (#("    " 0 4 (fontified t)) . -1688) (undo-tree-id2251 . -4) (undo-tree-id2252 . -4) (undo-tree-id2253 . -3) (undo-tree-id2254 . -4) (undo-tree-id2255 . -4) (undo-tree-id2256 . -4) (undo-tree-id2257 . -4) (undo-tree-id2258 . -4) (undo-tree-id2259 . -4) (undo-tree-id2260 . -4) (undo-tree-id2261 . -4) (undo-tree-id2262 . -4) (undo-tree-id2263 . -4) (undo-tree-id2264 . -4) (undo-tree-id2265 . -4) (undo-tree-id2266 . -4) (undo-tree-id2267 . -4) (undo-tree-id2268 . -4) (undo-tree-id2269 . -4) (undo-tree-id2270 . -4) (undo-tree-id2271 . -4) (undo-tree-id2272 . -4) (undo-tree-id2273 . -4) (undo-tree-id2274 . -4) (undo-tree-id2275 . -4) (undo-tree-id2276 . -4) (undo-tree-id2277 . -4) (undo-tree-id2278 . -4) (undo-tree-id2279 . -4) 1692 (t 25286 21358 181014 714000)) nil (25286 21409 21843 994000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face font-lock-string-face)) . 2310) (t 25286 21391 191015 142000)) nil (25286 21668 897609 274000) 0 nil] [nil nil ((#("nextRoute, " 0 9 (fontified t) 9 11 (fontified t)) . 2404) (undo-tree-id2280 . -10) (undo-tree-id2281 . -10) (undo-tree-id2282 . -10) (undo-tree-id2283 . -10) 2414 (t 25286 21391 191015 142000)) ((2404 . 2415)) (25286 21409 20204 397000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-string-face)) . 2310)) nil (25286 21668 897603 383000) 0 nil])
nil
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . 2310)) nil (25286 21668 897598 511000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-string-face)) . 2310)) nil (25286 21668 897593 753000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . 2310)) nil (25286 21668 897588 703000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face font-lock-string-face)) . 2310)) nil (25286 21668 897583 395000) 0 nil])
([nil nil ((2008 . 2018)) nil (25286 21670 5136 425000) 0 nil])
([nil current ((2019 . 2023) (#("/" 0 1 (fontified t face font-lock-string-face)) . -2019) (undo-tree-id2286 . -1) 2020 (#("=" 0 1 (fontified t)) . -2144) (undo-tree-id2287 . -1) 2145 (2129 . 2145) (#("P" 0 1 (fontified t)) . -2129) (undo-tree-id2288 . -1) 2130 (2119 . 2130) (2111 . 2119) (#("r" 0 1 (fontified t)) . -2111) (undo-tree-id2289 . -1) 2112 (2111 . 2112) (2102 . 2111) 2068) nil (25286 21714 198427 528000) 0 nil] [nil nil ((#("            request.session['next']=nextRoute
" 0 20 (fontified t) 20 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-1-face)) 28 34 (fontified t face font-lock-string-face) 34 35 (fontified t face (rainbow-delimiters-depth-1-face)) 35 36 (fontified t) 36 45 (fontified t) 45 46 (fontified t)) . 1892) (undo-tree-id2285 . -46)) ((1892 . 1938)) (25286 21668 898522 925000) 0 nil])
nil
([nil nil ((#("        if nextRoute:
" 0 8 (fontified t) 8 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 20 (fontified t) 20 22 (fontified t)) . 1870) (undo-tree-id2284 . -22)) ((1870 . 1892)) (25286 21668 897547 309000) 0 nil])
nil
